import React, { useState } from 'react';
import { 
  Box, 
  Typography, 
  Button,
  CircularProgress,
  Divider,
  Grid,
  TextField,
  InputAdornment,
  IconButton,
  Link,
  useMediaQuery,
  useTheme
} from '@mui/material';
import { styled } from '@mui/material/styles';
import { motion } from 'framer-motion';
import GoogleIcon from '@mui/icons-material/Google';
import SchoolIcon from '@mui/icons-material/School';
import EmailIcon from '@mui/icons-material/Email';
import LockIcon from '@mui/icons-material/Lock';
import VisibilityIcon from '@mui/icons-material/Visibility';
import VisibilityOffIcon from '@mui/icons-material/VisibilityOff';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import ForumIcon from '@mui/icons-material/Forum';
import GroupsIcon from '@mui/icons-material/Groups';
import TimelineIcon from '@mui/icons-material/Timeline';
import PieChartIcon from '@mui/icons-material/PieChart';
import { useNavigate } from 'react-router-dom';
import { signInWithPopup, signInWithEmailAndPassword } from 'firebase/auth';
import { auth, googleProvider } from '../firebase';

// Styled components
const LoginContainer = styled(Box)(({ theme }) => ({
  minHeight: '100vh',
  width: '100%',
  display: 'flex',
  flexDirection: 'row', // Yatay düzen
  overflow: 'hidden',
  position: 'relative',
  background: 'linear-gradient(145deg, #f5f7ff 0%, #eef1ff 100%)',
  [theme.breakpoints.down('md')]: {
    flexDirection: 'column', // Mobil cihazlarda dikey düzen
  },
}));

const AnimatedBackground = styled(Box)(({ theme }) => ({
  position: 'absolute',
  top: 0,
  left: 0,
  right: 0,
  bottom: 0,
  background: 'linear-gradient(145deg, #f5f7ff 0%, #eef1ff 100%)',
  zIndex: -1,
}));

const AppLogo = styled(Box)(({ theme }) => ({
  display: 'flex',
  alignItems: 'center',
  fontWeight: 'bold',
  fontSize: '24px',
  color: '#4747e1',
  margin: '20px 0',
  '& svg': {
    fontSize: '28px',
    marginRight: '8px',
    color: '#4747e1',
  }
}));

const LoginSection = styled(Box)(({ theme }) => ({
  flex: '0 0 50%',
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'center',
  padding: theme.spacing(4),
  [theme.breakpoints.down('md')]: {
    flex: '0 0 100%',
    padding: theme.spacing(2),
  },
}));

const FeatureSection = styled(Box)(({ theme }) => ({
  flex: '0 0 50%',
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'center',
  padding: theme.spacing(4),
  [theme.breakpoints.down('md')]: {
    flex: '0 0 100%',
    padding: theme.spacing(2),
  },
}));

const StyledTextField = styled(TextField)(({ theme }) => ({
  marginBottom: '20px',
  '& .MuiOutlinedInput-root': {
    borderRadius: '8px',
    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {
      borderColor: '#4747e1',
      borderWidth: '1px',
    },
    '&:hover .MuiOutlinedInput-notchedOutline': {
      borderColor: '#4747e1',
    },
  },
  '& .MuiInputLabel-root.Mui-focused': {
    color: '#4747e1',
  },
}));

const LoginButton = styled(Button)(({ theme }) => ({
  backgroundColor: '#4747e1',
  color: '#fff',
  borderRadius: '8px',
  padding: '12px 0',
  fontWeight: 'bold',
  textTransform: 'none',
  fontSize: '16px',
  '&:hover': {
    backgroundColor: '#3939b3',
  },
}));

const GoogleButton = styled(Button)(({ theme }) => ({
  backgroundColor: '#ffffff',
  color: '#333',
  border: '1px solid #e0e0e0',
  borderRadius: '8px',
  padding: '12px 0',
  fontWeight: 'bold',
  textTransform: 'none',
  fontSize: '16px',
  '&:hover': {
    backgroundColor: '#f5f5f5',
  },
}));

// Bilgi kartları için bileşen
const InfoCard = styled(Box)(({ theme }) => ({
  borderRadius: '12px',
  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',
  padding: '20px',
  backgroundColor: '#ffffff',
  height: '100%',
  transition: 'all 0.3s ease',
  '&:hover': {
    transform: 'translateY(-5px)',
    boxShadow: '0 8px 24px rgba(0, 0, 0, 0.1)',
  }
}));

const FeatureContainer = styled(Box)(({ theme }) => ({
  background: 'linear-gradient(145deg, #6b6bf9 0%, #4747e1 100%)',
  borderRadius: '24px',
  padding: theme.spacing(4),
  color: 'white',
  height: '100%',
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'center',
  boxShadow: '0 20px 40px rgba(71, 71, 225, 0.2)',
  position: 'relative',
  overflow: 'hidden',
}));

const Login = () => {
  const navigate = useNavigate();
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const [loading, setLoading] = useState(false);
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);

  const handleGoogleLogin = async () => {
    try {
      setLoading(true);
      await signInWithPopup(auth, googleProvider);
      navigate('/dashboard');
    } catch (error) {
      console.error("Google login error:", error);
    } finally {
      setLoading(false);
    }
  }

  const handleEmailLogin = async (e) => {
    e.preventDefault();
    if (!email || !password) return;
    
    try {
      setLoading(true);
      await signInWithEmailAndPassword(auth, email, password);
      navigate('/dashboard');
    } catch (error) {
      console.error("Email login error:", error);
    } finally {
      setLoading(false);
    }
  }

  // Özellik listesi - Bilgi kartlarında kullanılacak
  const featureItems = [
    {
      title: "Soru Forumu",
      icon: <ForumIcon />,
      description: "Sorularınızı sorun, cevaplar alın"
    },
    {
      title: "Benimle Çalış",
      icon: <GroupsIcon />,
      description: "Arkadaşlarınızla birlikte çalışın"
    },
    {
      title: "Deneme Takibi",
      icon: <TimelineIcon />,
      description: "Gelişiminizi takip edin"
    },
    {
      title: "Konu Analizi",
      icon: <PieChartIcon />,
      description: "Performansınızı analiz edin"
    }
  ];

  // Çizim öğeleri
  const illustrations = [
    { top: '15%', right: '10%', size: '80px', delay: 0 },
    { bottom: '20%', left: '12%', size: '60px', delay: 0.5 },
  ];

  return (
    <LoginContainer>
      <AnimatedBackground />
      
      {/* Logo ve Başlık - Sabit pozisyonda */}
      <Box sx={{ position: 'absolute', top: 0, left: 0, p: 3, zIndex: 10 }}>
        <AppLogo>
          <SchoolIcon />
          Tasky
        </AppLogo>
      </Box>

      {/* Sol Taraf - Giriş Formu */}
      <LoginSection>
        <motion.div
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.5 }}
        >
          <Box sx={{ maxWidth: 450, mx: 'auto', p: 3 }}>
            <Typography variant="h4" sx={{ 
              fontWeight: 700, 
              color: '#333',
              mb: 1
            }}>
              Welcome Back!
            </Typography>
            <Typography variant="body1" sx={{ 
              color: '#666',
              mb: 4
            }}>
              Please enter login details below
            </Typography>
            
            <form onSubmit={handleEmailLogin}>
              <Box sx={{ mb: 2 }}>
                <Typography variant="body2" sx={{ 
                  fontWeight: 500, 
                  mb: 1 
                }}>
                  Email
                </Typography>
                <StyledTextField
                  fullWidth
                  placeholder="Enter the email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  InputProps={{
                    startAdornment: (
                      <InputAdornment position="start">
                        <EmailIcon sx={{ color: '#4747e1' }} />
                      </InputAdornment>
                    ),
                  }}
                />
              </Box>
              
              <Box sx={{ mb: 1 }}>
                <Typography variant="body2" sx={{ 
                  fontWeight: 500, 
                  mb: 1 
                }}>
                  Password
                </Typography>
                <StyledTextField
                  fullWidth
                  placeholder="Enter the Password"
                  type={showPassword ? 'text' : 'password'}
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  InputProps={{
                    startAdornment: (
                      <InputAdornment position="start">
                        <LockIcon sx={{ color: '#4747e1' }} />
                      </InputAdornment>
                    ),
                    endAdornment: (
                      <InputAdornment position="end">
                        <IconButton
                          onClick={() => setShowPassword(!showPassword)}
                          edge="end"
                        >
                          {showPassword ? 
                            <VisibilityOffIcon sx={{ color: '#4747e1' }} /> : 
                            <VisibilityIcon sx={{ color: '#4747e1' }} />}
                        </IconButton>
                      </InputAdornment>
                    ),
                  }}
                />
              </Box>
              
              <Box sx={{ 
                display: 'flex',
                justifyContent: 'flex-end',
                mb: 3
              }}>
                <Link 
                  component="button" 
                  variant="body2" 
                  sx={{ 
                    color: '#4747e1',
                    textDecoration: 'none',
                    '&:hover': { textDecoration: 'underline' }
                  }}
                >
                  Forgot password?
                </Link>
              </Box>
              
              <LoginButton 
                fullWidth 
                type="submit"
                disabled={loading}
              >
                {loading ? <CircularProgress size={24} color="inherit" /> : 'Sign in'}
              </LoginButton>
            </form>
            
            <Box sx={{ 
              my: 3, 
              display: 'flex', 
              alignItems: 'center',
              color: '#666'
            }}>
              <Divider sx={{ flexGrow: 1 }} />
              <Typography variant="body2" sx={{ mx: 2 }}>Or continue</Typography>
              <Divider sx={{ flexGrow: 1 }} />
            </Box>
            
            <GoogleButton
              fullWidth
              startIcon={<GoogleIcon />}
              onClick={handleGoogleLogin}
              disabled={loading}
            >
              Log in with Google
            </GoogleButton>
            
            <Box sx={{ 
              mt: 3,
              textAlign: 'center'
            }}>
              <Typography variant="body2" sx={{ color: '#666' }}>
                Don&apos;t have an account? <Link component="button" sx={{ color: '#4747e1', textDecoration: 'none', '&:hover': { textDecoration: 'underline' } }}>Sign Up</Link>
              </Typography>
            </Box>
          </Box>
        </motion.div>
      </LoginSection>
      
      {/* Sağ Taraf - İllüstrasyon ve Özellikler */}
      <FeatureSection>
        <motion.div
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.8 }}
          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}
        >
          <FeatureContainer>
            {/* İllüstrasyon içeriği */}
            <Box sx={{ position: 'relative', width: '100%', height: '100%', minHeight: 300 }}>
              {/* Çizgi adam ve görev listesi illüstrasyonu */}
              <Box sx={{ position: 'absolute', top: '10%', left: '50%', transform: 'translateX(-50%)' }}>
                <motion.div
                  animate={{ y: [0, -10, 0] }}
                  transition={{ duration: 3, repeat: Infinity, ease: "easeInOut" }}
                >
                  <img 
                    src="https://cdn-icons-png.flaticon.com/512/3048/3048127.png" 
                    alt="Task illustration" 
                    style={{ width: isMobile ? '150px' : '200px', height: isMobile ? '150px' : '200px', filter: 'brightness(0) invert(1)' }} 
                  />
                </motion.div>
              </Box>
              
              {/* Onay işaretleri */}
              <motion.div
                animate={{ scale: [1, 1.1, 1], opacity: [0.8, 1, 0.8] }}
                transition={{ duration: 2, repeat: Infinity }}
                style={{ position: 'absolute', top: '15%', left: '20%' }}
              >
                <CheckCircleIcon sx={{ color: 'white', fontSize: isMobile ? '24px' : '32px' }} />
              </motion.div>
              
              <motion.div
                animate={{ scale: [1, 1.1, 1], opacity: [0.8, 1, 0.8] }}
                transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}
                style={{ position: 'absolute', top: '30%', right: '25%' }}
              >
                <CheckCircleIcon sx={{ color: 'white', fontSize: isMobile ? '24px' : '32px' }} />
              </motion.div>
              
              {/* Alt kısımdaki görev listesi illüstrasyonu */}
              <Box sx={{ position: 'absolute', bottom: '10%', width: '100%', textAlign: 'center' }}>
                <Typography variant="h6" sx={{ color: 'white', fontWeight: 'bold', mb: 2 }}>
                  Manage your task in a easy and more efficient way with Tasky...
                </Typography>
                
                {/* İlerleme göstergesi noktaları */}
                <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1 }}>
                  <Box sx={{ width: '8px', height: '8px', borderRadius: '50%', bgcolor: 'white' }} />
                  <Box sx={{ width: '8px', height: '8px', borderRadius: '50%', bgcolor: 'rgba(255,255,255,0.5)' }} />
                  <Box sx={{ width: '8px', height: '8px', borderRadius: '50%', bgcolor: 'rgba(255,255,255,0.5)' }} />
                </Box>
              </Box>
            </Box>
          </FeatureContainer>
          
          {/* Bilgi Kartları */}
          <Grid container spacing={2} sx={{ mt: 4, px: 2 }}>
            {featureItems.map((feature, index) => (
              <Grid item xs={6} sm={6} md={6} key={index}>
                <InfoCard>
                  <Box sx={{ 
                    display: 'flex', 
                    flexDirection: 'column',
                    alignItems: 'center',
                    justifyContent: 'center',
                    textAlign: 'center'
                  }}>
                    <Typography variant="subtitle1" sx={{ fontWeight: 600, display: 'flex', alignItems: 'center' }}>
                      {React.cloneElement(feature.icon, { sx: { mr: 1, color: '#4747e1' } })}
                      {feature.title}
                    </Typography>
                    <Typography variant="body2" sx={{ mt: 1 }}>
                      {feature.description}
                    </Typography>
                  </Box>
                </InfoCard>
              </Grid>
            ))}
          </Grid>
        </motion.div>
      </FeatureSection>
      
      {/* Arka plan dekoratif elementleri */}
      {illustrations.map((item, index) => (
        <motion.div
          key={index}
          style={{
            position: 'absolute',
            top: item.top || 'auto',
            left: item.left || 'auto',
            right: item.right || 'auto',
            bottom: item.bottom || 'auto',
            zIndex: 0
          }}
          animate={{ 
            y: [0, -15, 0],
            rotate: [0, item.left ? -5 : 5, 0]
          }}
          transition={{ 
            duration: 4, 
            repeat: Infinity, 
            ease: "easeInOut",
            delay: item.delay
          }}
        >
          <Box sx={{
            width: item.size,
            height: item.size,
            borderRadius: '50%',
            background: 'linear-gradient(135deg, #6b6bf9, #4747e1)',
            opacity: 0.2,
            filter: 'blur(10px)'
          }} />
        </motion.div>
      ))}
    </LoginContainer>
  );
};

export default Login;
