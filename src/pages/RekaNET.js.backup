import React, { useState, useEffect } from 'react';
import {
  Box,
  Typography,
  Card,
  CardContent,
  TextField,
  MenuItem,
  Button,
  Grid,
  Fade,
  Alert,
  CircularProgress,
  FormControl,
  InputLabel,
  Select
} from '@mui/material';
import NavigateNextIcon from '@mui/icons-material/NavigateNext';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import LanguageIcon from '@mui/icons-material/Language';
import EmojiEventsIcon from '@mui/icons-material/EmojiEvents';
import CelebrationIcon from '@mui/icons-material/Celebration';
import SchoolIcon from '@mui/icons-material/School';
import TrendingUpIcon from '@mui/icons-material/TrendingUp';
import BarChartIcon from '@mui/icons-material/BarChart';
// Ders iconları
import MenuBookIcon from '@mui/icons-material/MenuBook'; // Türk Dili ve Edebiyatı
import HistoryIcon from '@mui/icons-material/History'; // Tarih
import PublicIcon from '@mui/icons-material/Public'; // Coğrafya
import AutoStoriesIcon from '@mui/icons-material/AutoStories'; // Felsefe
import ChurchIcon from '@mui/icons-material/Church'; // Din Kültürü
import FunctionsIcon from '@mui/icons-material/Functions'; // Matematik
import ScienceIcon from '@mui/icons-material/Science'; // Fizik, Kimya, Biyoloji
import ReactConfetti from 'react-confetti';
import { db } from '../firebase';
import { collection, addDoc, query, where, getDocs } from 'firebase/firestore';

// Türkiye'deki 81 il listesi
const turkeyProvinces = [
  'Adana', 'Adıyaman', 'Afyonkarahisar', 'Ağrı', 'Amasya', 'Ankara', 'Antalya', 'Artvin', 'Aydın', 'Balıkesir',
  'Bilecik', 'Bingöl', 'Bitlis', 'Bolu', 'Burdur', 'Bursa', 'Çanakkale', 'Çankırı', 'Çorum', 'Denizli',
  'Diyarbakır', 'Edirne', 'Elazığ', 'Erzincan', 'Erzurum', 'Eskişehir', 'Gaziantep', 'Giresun', 'Gümüşhane', 'Hakkari',
  'Hatay', 'Isparta', 'Mersin', 'İstanbul', 'İzmir', 'Kars', 'Kastamonu', 'Kayseri', 'Kırklareli', 'Kırşehir',
  'Kocaeli', 'Konya', 'Kütahya', 'Malatya', 'Manisa', 'Kahramanmaraş', 'Mardin', 'Muğla', 'Muş', 'Nevşehir',
  'Niğde', 'Ordu', 'Rize', 'Sakarya', 'Samsun', 'Siirt', 'Sinop', 'Sivas', 'Tekirdağ', 'Tokat',
  'Trabzon', 'Tunceli', 'Şanlıurfa', 'Uşak', 'Van', 'Yozgat', 'Zonguldak', 'Aksaray', 'Bayburt', 'Karaman',
  'Kırıkkale', 'Batman', 'Şırnak', 'Bartın', 'Ardahan', 'Iğdır', 'Yalova', 'Karabük', 'Kilis', 'Osmaniye',
  'Düzce'
];

const RekaNET = () => {
  // State tanımlamaları
  const [activeStep, setActiveStep] = useState(0);
  const [selectedProvince, setSelectedProvince] = useState('');
  const [formData, setFormData] = useState({
    province: '',
    tytScores: {
      turkish: { correct: 0, wrong: 0, empty: 0 },
      social: { correct: 0, wrong: 0, empty: 0 },
      math: { correct: 0, wrong: 0, empty: 0 },
      science: { correct: 0, wrong: 0, empty: 0 }
    },
    aytScores: {
      literature: { correct: 0, wrong: 0, empty: 0 },
      history1: { correct: 0, wrong: 0, empty: 0 },
      geography1: { correct: 0, wrong: 0, empty: 0 },
      history2: { correct: 0, wrong: 0, empty: 0 },
      geography2: { correct: 0, wrong: 0, empty: 0 },
      philosophy: { correct: 0, wrong: 0, empty: 0 },
      religion: { correct: 0, wrong: 0, empty: 0 },
      mathAYT: { correct: 0, wrong: 0, empty: 0 },
      physics: { correct: 0, wrong: 0, empty: 0 },
      chemistry: { correct: 0, wrong: 0, empty: 0 },
      biology: { correct: 0, wrong: 0, empty: 0 }
    }
  });

  // İl seçimi değiştiğinde çalışacak fonksiyon
  const handleProvinceChange = (event) => {
    setSelectedProvince(event.target.value);
    setFormData({
      ...formData,
      province: event.target.value
    });
  };

  // İlerle butonuna tıklandığında çalışacak fonksiyon
  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  // Geri butonuna tıklandığında çalışacak fonksiyon
  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };
  
  // Skor değişikliklerini işleyen fonksiyon
  const handleScoreChange = (examType, subject, field, value) => {
    if (examType === 'tyt') {
      setFormData({
        ...formData,
        tytScores: {
          ...formData.tytScores,
          [subject]: {
            ...formData.tytScores[subject],
            [field]: value
          }
        }
      });
    } else if (examType === 'ayt') {
      setFormData({
        ...formData,
        aytScores: {
          ...formData.aytScores,
          [subject]: {
            ...formData.aytScores[subject],
            [field]: value
          }
        }
      });
    }
  };
  
  // TYT net hesaplama
  const calculateTYTNet = (subject) => {
    // Undefined kontrolü ekliyoruz
    if (!formData.tytScores[subject]) return "0.00";
    
    const correct = Number(formData.tytScores[subject].correct || 0);
    const wrong = Number(formData.tytScores[subject].wrong || 0);
    return Math.max(0, correct - (wrong * 0.25)).toFixed(2);
  };
  
  // AYT net hesaplama
  const calculateAYTNet = (subject) => {
    // Undefined kontrolü ekliyoruz
    if (!formData.aytScores[subject]) return "0.00";
    
    const correct = Number(formData.aytScores[subject].correct || 0);
    const wrong = Number(formData.aytScores[subject].wrong || 0);
    return Math.max(0, correct - (wrong * 0.25)).toFixed(2);
  };
  
  // Toplam TYT neti hesaplama
  const calculateTotalTYTNet = () => {
    return (
      parseFloat(calculateTYTNet('turkish')) +
      parseFloat(calculateTYTNet('social')) +
      parseFloat(calculateTYTNet('mathTYT')) +
      parseFloat(calculateTYTNet('science'))
    ).toFixed(2);
  };
  
  // Toplam AYT neti hesaplama
  const calculateTotalAYTNet = () => {
    return (
      parseFloat(calculateAYTNet('mathAYT')) +
      parseFloat(calculateAYTNet('physics')) +
      parseFloat(calculateAYTNet('chemistry')) +
      parseFloat(calculateAYTNet('biology'))
    ).toFixed(2);
  };
  
  // RekaNET karşılaştırma durumu
  const [comparisonResult, setComparisonResult] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showConfetti, setShowConfetti] = useState(false);
  const [windowSize, setWindowSize] = useState({
    width: window.innerWidth,
    height: window.innerHeight,
  });
  

  
  // Pencere boyutunu takip et
  useEffect(() => {
    const handleResize = () => {
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
      });
    };
    
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);
  
  // Konfeti efektini başlat
  const startConfetti = () => {
    setShowConfetti(true);
    setTimeout(() => setShowConfetti(false), 5000); // 5 saniye sonra konfeti efektini kapat
  };

  // Adımlar
  const steps = [
    'İl Seçimi',
    'TYT Netleri',
    'AYT Netleri',
    'Sonuçlar'
  ];

  return (
    <Box sx={{ 
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #1e293d 0%, #2d3748 100%)',
      position: 'relative',
      '&::before': {
        content: '""',
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        background: 'radial-gradient(circle at 20% 50%, rgba(30, 41, 61, 0.3) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(45, 55, 72, 0.15) 0%, transparent 50%)',
        pointerEvents: 'none'
      }
    }}>
      <Box sx={{ p: { xs: 2, sm: 3, md: 4 }, maxWidth: 1200, mx: 'auto', position: 'relative', zIndex: 1 }}>
        {/* Header */}
        <Box sx={{ 
          display: 'flex', 
          alignItems: 'center', 
          mb: 6, 
          mt: 16,
          justifyContent: 'center',
          textAlign: 'center'
        }}>
          <Box sx={{ position: 'relative' }}>
            <LanguageIcon 
              sx={{ 
                fontSize: 80, 
                color: '#ffffff',
                mb: 2,
                filter: 'drop-shadow(0 8px 16px rgba(0, 0, 0, 0.3))',
                animation: 'pulse 2s infinite'
              }} 
            />
            <Typography 
              variant="h2" 
              component="h1" 
              sx={{ 
                fontWeight: 900,
                color: '#ffffff',
                textShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',
                lineHeight: 1.2,
                mb: 1,
                fontFamily: '"Satoshi", "Inter", sans-serif'
              }}
            >
              RekaNET
            </Typography>
            <Typography 
              variant="h5" 
              sx={{ 
                color: 'rgba(255, 255, 255, 0.9)',
                fontWeight: 600,
                textShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'
              }}
            >
              Yapay Zeka Destekli Soru Çözüm Platformu
            </Typography>
          </Box>
        </Box>
      
      {/* Modern Stepper */}
      <Box sx={{ 
        mb: 6,
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        gap: 4,
        flexWrap: 'wrap'
      }}>
        {steps.map((label, index) => (
          <Box key={label} sx={{ 
            display: 'flex', 
            flexDirection: 'column', 
            alignItems: 'center',
            gap: 1
          }}>
            <Box sx={{
              width: 60,
              height: 60,
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              position: 'relative',
              background: activeStep >= index 
                ? 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)'
                : 'rgba(255, 255, 255, 0.1)',
              backdropFilter: 'blur(10px)',
              border: '2px solid rgba(255, 255, 255, 0.2)',
              boxShadow: activeStep >= index 
                ? '0 8px 25px rgba(67, 233, 123, 0.4)'
                : '0 4px 15px rgba(255, 255, 255, 0.1)',
              transition: 'all 0.3s ease',
              cursor: 'pointer',
              '&::before': {
                content: '""',
                position: 'absolute',
                top: '2px',
                left: '2px',
                right: '2px',
                bottom: '2px',
                borderRadius: '50%',
                background: activeStep >= index 
                  ? 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, transparent 100%)'
                  : 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, transparent 100%)',
              }
            }}>
              <Typography variant="h6" sx={{
                color: '#ffffff',
                fontWeight: 800,
                position: 'relative',
                zIndex: 1
              }}>
                {index + 1}
              </Typography>
            </Box>
            <Typography variant="body2" sx={{
              color: activeStep >= index ? '#ffffff' : 'rgba(255, 255, 255, 0.7)',
              fontWeight: activeStep >= index ? 700 : 500,
              textAlign: 'center',
              fontSize: '0.8rem',
              transition: 'all 0.3s ease'
            }}>
              {label}
            </Typography>
          </Box>
        ))}
      </Box>
      
      {/* Modern Content Card */}
      <Card 
        elevation={0}
        sx={{ 
          borderRadius: '24px',
          overflow: 'hidden',
          mb: 4,
          background: 'rgba(255, 255, 255, 0.1)',
          backdropFilter: 'blur(20px)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',
          position: 'relative',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            height: '2px',
            background: 'linear-gradient(90deg, transparent, rgba(255,255,255,0.5), transparent)'
          }
        }}
      >
        <CardContent sx={{ p: 6 }}>
          {/* Adım 1: İl Seçimi */}
          {activeStep === 0 && (
            <Fade in={activeStep === 0} timeout={800}>
              <Box>
                {/* Header with Icon */}
                <Box sx={{ 
                  display: 'flex', 
                  alignItems: 'center', 
                  justifyContent: 'center',
                  mb: 4 
                }}>
                  <Box sx={{
                    width: 80,
                    height: 80,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    mr: 3,
                    boxShadow: '0 12px 30px rgba(102, 126, 234, 0.4)',
                    position: 'relative',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '50%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <LanguageIcon sx={{ 
                      color: '#ffffff', 
                      fontSize: '2.5rem',
                      position: 'relative',
                      zIndex: 1
                    }} />
                  </Box>
                  <Box>
                    <Typography variant="h4" sx={{ 
                      mb: 1, 
                      fontWeight: 800, 
                      color: '#ffffff',
                      fontFamily: '"Satoshi", "Inter", sans-serif'
                    }}>
                      Hangi ilde yaşıyorsunuz?
                    </Typography>
                    <Typography variant="h6" sx={{ 
                      color: 'rgba(255, 255, 255, 0.8)',
                      fontWeight: 500
                    }}>
                      Size en doğru önerileri sunabilmemiz için lütfen yaşadığınız ili seçin.
                    </Typography>
                  </Box>
                </Box>
                
                {/* Province Selection */}
                <Box sx={{ 
                  maxWidth: 600, 
                  mx: 'auto',
                  mb: 4
                }}>
                  <FormControl 
                    fullWidth 
                    sx={{ 
                      mb: 4,
                      '& .MuiOutlinedInput-root': {
                        borderRadius: '16px',
                        background: '#1e293d',
                        backdropFilter: 'blur(10px)',
                        border: '2px solid rgba(255, 255, 255, 0.3)',
                        fontSize: '1.1rem',
                        fontWeight: 600,
                        minHeight: '64px',
                        transition: 'all 0.3s ease',
                        color: '#ffffff',
                        '&:hover': {
                          transform: 'translateY(-2px)',
                          boxShadow: '0 8px 25px rgba(0, 0, 0, 0.15)',
                          borderColor: 'rgba(255, 255, 255, 0.5)'
                        },
                        '&.Mui-focused': {
                          transform: 'translateY(-2px)',
                          boxShadow: '0 12px 30px rgba(30, 41, 61, 0.3)',
                          borderColor: '#1e293d'
                        },
                        '& .MuiSelect-select': {
                          color: '#ffffff'
                        },
                        '& .MuiSvgIcon-root': {
                          color: '#ffffff'
                        }
                      },
                      '& .MuiInputLabel-root': {
                        color: 'rgba(255, 255, 255, 0.8)',
                        fontWeight: 600,
                        fontSize: '1.1rem',
                        '&.Mui-focused': {
                          color: '#ffffff'
                        }
                      }
                    }}
                  >
                    <InputLabel id="province-select-label">İl Seçiniz</InputLabel>
                    <Select
                      labelId="province-select-label"
                      id="province-select"
                      value={selectedProvince}
                      label="İl Seçiniz"
                      onChange={handleProvinceChange}
                      MenuProps={{
                        PaperProps: {
                          sx: {
                            maxHeight: 300,
                            borderRadius: '16px',
                            background: '#1e293d',
                            backdropFilter: 'blur(20px)',
                            border: '1px solid rgba(255, 255, 255, 0.3)',
                            boxShadow: '0 20px 40px rgba(0, 0, 0, 0.15)',
                            '& .MuiMenuItem-root': {
                              borderRadius: '8px',
                              margin: '4px 8px',
                              fontWeight: 500,
                              color: '#ffffff',
                              '&:hover': {
                                background: 'rgba(255, 255, 255, 0.1)',
                                transform: 'translateX(4px)'
                              }
                            }
                          }
                        }
                      }}
                    >
                      {turkeyProvinces.map((province) => (
                        <MenuItem key={province} value={province}>
                          {province}
                        </MenuItem>
                      ))}
                    </Select>
                  </FormControl>
                </Box>
                
                {/* Action Button */}
                <Box sx={{ display: 'flex', justifyContent: 'center' }}>
                  <Button
                    variant="contained"
                    endIcon={<NavigateNextIcon />}
                    onClick={handleNext}
                    disabled={!selectedProvince}
                    sx={{
                      background: selectedProvince 
                        ? 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)'
                        : 'rgba(255, 255, 255, 0.2)',
                      color: '#ffffff',
                      fontWeight: 700,
                      px: 6,
                      py: 2,
                      borderRadius: '16px',
                      fontSize: '1.1rem',
                      minHeight: '56px',
                      minWidth: '160px',
                      boxShadow: selectedProvince 
                        ? '0 8px 25px rgba(67, 233, 123, 0.4)'
                        : '0 4px 15px rgba(255, 255, 255, 0.1)',
                      transition: 'all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                      border: '2px solid rgba(255, 255, 255, 0.2)',
                      position: 'relative',
                      overflow: 'hidden',
                      textTransform: 'none',
                      letterSpacing: '0.5px',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0,
                        background: 'linear-gradient(135deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0.05) 100%)',
                        transition: 'opacity 0.3s ease'
                      },
                      '&:hover': {
                        transform: selectedProvince ? 'translateY(-4px) scale(1.02)' : 'none',
                        boxShadow: selectedProvince 
                          ? '0 16px 40px rgba(67, 233, 123, 0.6)'
                          : '0 4px 15px rgba(255, 255, 255, 0.1)',
                        '&::before': {
                          opacity: 0.9
                        }
                      },
                      '&:active': {
                        transform: selectedProvince ? 'translateY(-2px) scale(1.01)' : 'none'
                      },
                      '&.Mui-disabled': {
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'rgba(255, 255, 255, 0.4)',
                        transform: 'none',
                        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)'
                      }
                    }}
                  >
                    İlerle
                  </Button>
                </Box>
              </Box>
            </Fade>
          )}
          
          {/* Adım 2: TYT Netleri */}
          {activeStep === 1 && (
            <Fade in={activeStep === 1} timeout={800}>
              <Box>
                {/* Compact Header with Premium Design */}
                <Box sx={{ 
                  display: 'flex', 
                  flexDirection: { xs: 'column', md: 'row' },
                  alignItems: 'center', 
                  justifyContent: 'center',
                  mb: 6,
                  textAlign: { xs: 'center', md: 'left' }
                }}>
                  <Box sx={{
                    width: 80,
                    height: 80,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    mr: { xs: 0, md: 3 },
                    mb: { xs: 2, md: 0 },
                    boxShadow: '0 12px 30px rgba(102, 126, 234, 0.4)',
                    position: 'relative',
                    backdropFilter: 'blur(20px)',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '60%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <SchoolIcon sx={{ 
                      color: '#ffffff', 
                      fontSize: '2.5rem',
                      position: 'relative',
                      zIndex: 2,
                      filter: 'drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3))'
                    }} />
                  </Box>
                  <Box>
                    <Typography variant="h4" sx={{ 
                      mb: 1, 
                      fontWeight: 800, 
                      color: '#ffffff',
                      fontFamily: '"Satoshi", "Inter", sans-serif',
                      textShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',
                      lineHeight: 1.2
                    }}>
                      TYT Sonuçlarınız
                    </Typography>
                    <Typography variant="body1" sx={{ 
                      color: 'rgba(255, 255, 255, 0.9)',
                      fontWeight: 600,
                      maxWidth: '400px',
                      lineHeight: 1.4,
                      textShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'
                    }}>
                      Son girdiğiniz TYT denemesindeki doğru, yanlış ve boş sayılarınızı giriniz.
                    </Typography>
                  </Box>
                </Box>
                
                {/* Premium TYT Subject Cards */}
                <Box sx={{ 
                  display: 'grid',
                  gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' },
                  gap: 5,
                  maxWidth: '1000px',
                  mx: 'auto',
                  mb: 6,
                  // Global input styling for all inputs
                  '& .MuiOutlinedInput-input': {
                    color: '#2d3748 !important',
                    fontWeight: '700 !important'
                  },
                  // Global label positioning for better readability
                  '& .MuiInputLabel-root': {
                    transform: 'translate(14px, -9px) scale(0.75) !important',
                    '&.Mui-focused': {
                      transform: 'translate(14px, -9px) scale(0.75) !important'
                    },
                    '&.MuiFormLabel-filled': {
                      transform: 'translate(14px, -9px) scale(0.75) !important'
                    }
                  }
                }}>
                  {/* Türkçe - Premium Card */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    backdropFilter: 'blur(25px)',
                    borderRadius: '24px',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    p: 5,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-8px) scale(1.02)',
                      boxShadow: '0 25px 60px rgba(102, 126, 234, 0.3)',
                      borderColor: 'rgba(102, 126, 234, 0.4)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 4, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 70,
                        height: 70,
                        borderRadius: '20px',
                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3,
                        color: '#ffffff',
                        boxShadow: '0 12px 30px rgba(102, 126, 234, 0.4)',
                        position: 'relative',
                        '&::before': {
                          content: '""',
                          position: 'absolute',
                          top: '2px',
                          left: '2px',
                          right: '2px',
                          height: '60%',
                          background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                          borderRadius: '18px 18px 0 0'
                        }
                      }}>
                        <MenuBookIcon sx={{ 
                          fontSize: '2.2rem',
                          position: 'relative',
                          zIndex: 1,
                          filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h5" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          mb: 1,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          Türkçe
                        </Typography>
                        <Typography variant="body1" sx={{ 
                          color: 'rgba(255, 255, 255, 0.8)',
                          fontWeight: 600,
                          fontSize: '1.1rem'
                        }}>
                          40 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 3, 
                      mb: 4, 
                      position: 'relative', 
                      zIndex: 1,
                      flexWrap: 'wrap',
                      justifyContent: 'center'
                    }}>
                      {/* Doğru Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#43e97b',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(67, 233, 123, 0.3)'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 40 } }}
                          value={formData.tytScores.turkish.correct}
                          onChange={(e) => handleScoreChange('tyt', 'turkish', 'correct', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(67, 233, 123, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(67, 233, 123, 0.3)',
                                borderColor: '#43e97b'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(67, 233, 123, 0.4)',
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#43e97b !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#ef4444',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(239, 68, 68, 0.3)'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 40 } }}
                          value={formData.tytScores.turkish.wrong}
                          onChange={(e) => handleScoreChange('tyt', 'turkish', 'wrong', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(239, 68, 68, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(239, 68, 68, 0.3)',
                                borderColor: '#ef4444'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(239, 68, 68, 0.4)',
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#ef4444 !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#fb923c',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(251, 146, 60, 0.3)'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 40 } }}
                          value={formData.tytScores.turkish.empty}
                          onChange={(e) => handleScoreChange('tyt', 'turkish', 'empty', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(251, 146, 60, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(251, 146, 60, 0.3)',
                                borderColor: '#fb923c'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(251, 146, 60, 0.4)',
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#fb923c !important'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 12px 30px rgba(102, 126, 234, 0.4)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        mb: 1,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        NET PUANINIZ
                      </Typography>
                      <Typography variant="h4" sx={{ 
                        color: '#ffffff',
                        fontWeight: 900,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        {calculateTYTNet('turkish')}
                      </Typography>
                    </Box>
                  </Box>

                  {/* Sosyal Bilimler - Premium Card */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    backdropFilter: 'blur(25px)',
                    borderRadius: '24px',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    p: 5,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(168, 230, 207, 0.1) 0%, rgba(255, 211, 165, 0.1) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-8px) scale(1.02)',
                      boxShadow: '0 25px 60px rgba(168, 230, 207, 0.3)',
                      borderColor: 'rgba(168, 230, 207, 0.4)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 4, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 70,
                        height: 70,
                        borderRadius: '20px',
                        background: 'linear-gradient(135deg, #a8e6cf 0%, #ffd3a5 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3,
                        color: '#ffffff',
                        boxShadow: '0 12px 30px rgba(168, 230, 207, 0.4)',
                        position: 'relative',
                        '&::before': {
                          content: '""',
                          position: 'absolute',
                          top: '2px',
                          left: '2px',
                          right: '2px',
                          height: '60%',
                          background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                          borderRadius: '18px 18px 0 0'
                        }
                      }}>
                        <PublicIcon sx={{ 
                          fontSize: '2.2rem',
                          position: 'relative',
                          zIndex: 1,
                          filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h5" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          mb: 1,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          Sosyal Bilimler
                        </Typography>
                        <Typography variant="body1" sx={{ 
                          color: 'rgba(255, 255, 255, 0.8)',
                          fontWeight: 600,
                          fontSize: '1.1rem'
                        }}>
                          20 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 3, 
                      mb: 4, 
                      position: 'relative', 
                      zIndex: 1,
                      flexWrap: 'wrap',
                      justifyContent: 'center'
                    }}>
                      {/* Doğru Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#43e97b',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(67, 233, 123, 0.3)'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 20 } }}
                          value={formData.tytScores.social.correct}
                          onChange={(e) => handleScoreChange('tyt', 'social', 'correct', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(67, 233, 123, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(67, 233, 123, 0.3)',
                                borderColor: '#43e97b'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(67, 233, 123, 0.4)',
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#43e97b !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#ef4444',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(239, 68, 68, 0.3)'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 20 } }}
                          value={formData.tytScores.social.wrong}
                          onChange={(e) => handleScoreChange('tyt', 'social', 'wrong', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(239, 68, 68, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(239, 68, 68, 0.3)',
                                borderColor: '#ef4444'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(239, 68, 68, 0.4)',
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#ef4444 !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#fb923c',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(251, 146, 60, 0.3)'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 20 } }}
                          value={formData.tytScores.social.empty}
                          onChange={(e) => handleScoreChange('tyt', 'social', 'empty', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(251, 146, 60, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(251, 146, 60, 0.3)',
                                borderColor: '#fb923c'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(251, 146, 60, 0.4)',
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#fb923c !important'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #a8e6cf 0%, #ffd3a5 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 12px 30px rgba(168, 230, 207, 0.4)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        mb: 1,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        NET PUANINIZ
                      </Typography>
                      <Typography variant="h4" sx={{ 
                        color: '#ffffff',
                        fontWeight: 900,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        {calculateTYTNet('social')}
                      </Typography>
                    </Box>
                  </Box>

                  {/* Matematik - Premium Card */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    backdropFilter: 'blur(25px)',
                    borderRadius: '24px',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    p: 5,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(147, 51, 234, 0.1) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-8px) scale(1.02)',
                      boxShadow: '0 25px 60px rgba(59, 130, 246, 0.3)',
                      borderColor: 'rgba(59, 130, 246, 0.4)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 4, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 70,
                        height: 70,
                        borderRadius: '20px',
                        background: 'linear-gradient(135deg, #3b82f6 0%, #9333ea 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3,
                        color: '#ffffff',
                        boxShadow: '0 12px 30px rgba(59, 130, 246, 0.4)',
                        position: 'relative',
                        '&::before': {
                          content: '""',
                          position: 'absolute',
                          top: '2px',
                          left: '2px',
                          right: '2px',
                          height: '60%',
                          background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                          borderRadius: '18px 18px 0 0'
                        }
                      }}>
                        <FunctionsIcon sx={{ 
                          fontSize: '2.2rem',
                          position: 'relative',
                          zIndex: 1,
                          filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h5" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          mb: 1,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          Matematik
                        </Typography>
                        <Typography variant="body1" sx={{ 
                          color: 'rgba(255, 255, 255, 0.8)',
                          fontWeight: 600,
                          fontSize: '1.1rem'
                        }}>
                          40 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 3, 
                      mb: 4, 
                      position: 'relative', 
                      zIndex: 1,
                      flexWrap: 'wrap',
                      justifyContent: 'center'
                    }}>
                      {/* Doğru Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#43e97b',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(67, 233, 123, 0.3)'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 40 } }}
                          value={formData.tytScores.math.correct}
                          onChange={(e) => handleScoreChange('tyt', 'math', 'correct', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(67, 233, 123, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(67, 233, 123, 0.3)',
                                borderColor: '#43e97b'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(67, 233, 123, 0.4)',
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#43e97b !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#ef4444',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(239, 68, 68, 0.3)'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 40 } }}
                          value={formData.tytScores.math.wrong}
                          onChange={(e) => handleScoreChange('tyt', 'math', 'wrong', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(239, 68, 68, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(239, 68, 68, 0.3)',
                                borderColor: '#ef4444'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(239, 68, 68, 0.4)',
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#ef4444 !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#fb923c',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(251, 146, 60, 0.3)'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 40 } }}
                          value={formData.tytScores.math.empty}
                          onChange={(e) => handleScoreChange('tyt', 'math', 'empty', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(251, 146, 60, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(251, 146, 60, 0.3)',
                                borderColor: '#fb923c'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(251, 146, 60, 0.4)',
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#fb923c !important'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #3b82f6 0%, #9333ea 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 12px 30px rgba(59, 130, 246, 0.4)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        mb: 1,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        NET PUANINIZ
                      </Typography>
                      <Typography variant="h4" sx={{ 
                        color: '#ffffff',
                        fontWeight: 900,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        {calculateTYTNet('math')}
                      </Typography>
                    </Box>
                  </Box>

                  {/* Fen Bilimleri - Premium Card */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    backdropFilter: 'blur(25px)',
                    borderRadius: '24px',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    p: 5,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(250, 112, 154, 0.1) 0%, rgba(254, 225, 64, 0.1) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-8px) scale(1.02)',
                      boxShadow: '0 25px 60px rgba(250, 112, 154, 0.3)',
                      borderColor: 'rgba(250, 112, 154, 0.4)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 4, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 70,
                        height: 70,
                        borderRadius: '20px',
                        background: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3,
                        color: '#ffffff',
                        boxShadow: '0 12px 30px rgba(250, 112, 154, 0.4)',
                        position: 'relative',
                        '&::before': {
                          content: '""',
                          position: 'absolute',
                          top: '2px',
                          left: '2px',
                          right: '2px',
                          height: '60%',
                          background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                          borderRadius: '18px 18px 0 0'
                        }
                      }}>
                        <ScienceIcon sx={{ 
                          fontSize: '2.2rem',
                          position: 'relative',
                          zIndex: 1,
                          filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h5" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          mb: 1,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          Fen Bilimleri
                        </Typography>
                        <Typography variant="body1" sx={{ 
                          color: 'rgba(255, 255, 255, 0.8)',
                          fontWeight: 600,
                          fontSize: '1.1rem'
                        }}>
                          20 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 3, 
                      mb: 4, 
                      position: 'relative', 
                      zIndex: 1,
                      flexWrap: 'wrap',
                      justifyContent: 'center'
                    }}>
                      {/* Doğru Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#43e97b',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(67, 233, 123, 0.3)'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 20 } }}
                          value={formData.tytScores.science.correct}
                          onChange={(e) => handleScoreChange('tyt', 'science', 'correct', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(67, 233, 123, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(67, 233, 123, 0.3)',
                                borderColor: '#43e97b'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(67, 233, 123, 0.4)',
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#43e97b !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#ef4444',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(239, 68, 68, 0.3)'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 20 } }}
                          value={formData.tytScores.science.wrong}
                          onChange={(e) => handleScoreChange('tyt', 'science', 'wrong', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(239, 68, 68, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(239, 68, 68, 0.3)',
                                borderColor: '#ef4444'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(239, 68, 68, 0.4)',
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#ef4444 !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#fb923c',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(251, 146, 60, 0.3)'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 20 } }}
                          value={formData.tytScores.science.empty}
                          onChange={(e) => handleScoreChange('tyt', 'science', 'empty', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(251, 146, 60, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(251, 146, 60, 0.3)',
                                borderColor: '#fb923c'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(251, 146, 60, 0.4)',
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#fb923c !important'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 12px 30px rgba(250, 112, 154, 0.4)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        mb: 1,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        NET PUANINIZ
                      </Typography>
                      <Typography variant="h4" sx={{ 
                        color: '#ffffff',
                        fontWeight: 900,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        {calculateTYTNet('science')}
                      </Typography>
                    </Box>
                  </Box>
                </Box>

                {/* Premium Total TYT Score */}
                <Box sx={{
                  maxWidth: '600px',
                  mx: 'auto',
                  mb: 6,
                  p: 5,
                  borderRadius: '30px',
                  background: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
                  textAlign: 'center',
                  position: 'relative',
                  overflow: 'hidden',
                  boxShadow: '0 20px 60px rgba(67, 233, 123, 0.5)',
                  border: '3px solid rgba(255, 255, 255, 0.2)',
                  '&::before': {
                    content: '""',
                    position: 'absolute',
                    top: '3px',
                    left: '3px',
                    right: '3px',
                    height: '60%',
                    background: 'linear-gradient(180deg, rgba(255,255,255,0.4) 0%, transparent 100%)',
                    borderRadius: '27px 27px 0 0'
                  },
                  '&::after': {
                    content: '""',
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                    background: 'radial-gradient(circle at 50% 50%, rgba(67, 233, 123, 0.3) 0%, transparent 70%)',
                    animation: 'pulse 3s ease-in-out infinite'
                  }
                }}>
                  <Typography variant="h6" sx={{ 
                    color: 'rgba(255, 255, 255, 0.9)',
                    fontWeight: 700,
                    mb: 2,
                    position: 'relative',
                    zIndex: 1,
                    letterSpacing: '1px'
                  }}>
                    TOPLAM TYT NETİNİZ
                  </Typography>
                  <Typography variant="h2" sx={{ 
                    color: '#ffffff',
                    fontWeight: 900,
                    fontFamily: '"Satoshi", "Inter", sans-serif',
                    position: 'relative',
                    zIndex: 1,
                    textShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',
                    fontSize: { xs: '2.5rem', md: '3.5rem' }
                  }}>
                    {calculateTotalTYTNet()}
                  </Typography>
                  <Typography variant="body1" sx={{ 
                    color: 'rgba(255, 255, 255, 0.8)',
                    fontWeight: 600,
                    mt: 1,
                    position: 'relative',
                    zIndex: 1
                  }}>
                    120 Soru Üzerinden
                  </Typography>
                </Box>
                
                {/* Premium Navigation Buttons */}
                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 8 }}>
                  <Button
                    variant="outlined"
                    startIcon={<ArrowBackIcon />}
                    onClick={handleBack}
                    sx={{
                      background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                      backdropFilter: 'blur(20px)',
                      border: '2px solid rgba(255, 255, 255, 0.3)',
                      color: '#ffffff',
                      fontWeight: 800,
                      px: 6,
                      py: 2,
                      borderRadius: '20px',
                      fontSize: '1.1rem',
                      minHeight: '60px',
                      minWidth: '140px',
                      textTransform: 'none',
                      letterSpacing: '0.5px',
                      fontFamily: '"Satoshi", "Inter", sans-serif',
                      position: 'relative',
                      overflow: 'hidden',
                      transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0,
                        background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, transparent 100%)',
                        opacity: 0,
                        transition: 'opacity 0.3s ease'
                      },
                      '&:hover': {
                        background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.25) 0%, rgba(255, 255, 255, 0.15) 100%)',
                        borderColor: 'rgba(255, 255, 255, 0.5)',
                        transform: 'translateY(-4px) scale(1.05)',
                        boxShadow: '0 15px 40px rgba(255, 255, 255, 0.2)',
                        '&::before': {
                          opacity: 1
                        }
                      }
                    }}
                  >
                    Geri
                  </Button>
                  <Button
                    variant="contained"
                    endIcon={<NavigateNextIcon />}
                    onClick={handleNext}
                    sx={{
                      background: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
                      color: '#ffffff',
                      fontWeight: 800,
                      px: 8,
                      py: 2,
                      borderRadius: '20px',
                      fontSize: '1.1rem',
                      minHeight: '60px',
                      minWidth: '180px',
                      boxShadow: '0 12px 40px rgba(67, 233, 123, 0.5)',
                      transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                      border: '3px solid rgba(255, 255, 255, 0.2)',
                      position: 'relative',
                      overflow: 'hidden',
                      textTransform: 'none',
                      letterSpacing: '1px',
                      fontFamily: '"Satoshi", "Inter", sans-serif',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.4) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0',
                        transition: 'opacity 0.3s ease'
                      },
                      '&::after': {
                        content: '""',
                        position: 'absolute',
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0,
                        background: 'linear-gradient(135deg, rgba(56, 249, 215, 0.3) 0%, rgba(67, 233, 123, 0.3) 100%)',
                        opacity: 0,
                        transition: 'opacity 0.3s ease'
                      },
                      '&:hover': {
                        background: 'linear-gradient(135deg, #38f9d7 0%, #43e97b 100%)',
                        transform: 'translateY(-6px) scale(1.08)',
                        boxShadow: '0 20px 60px rgba(67, 233, 123, 0.7)',
                        borderColor: 'rgba(255, 255, 255, 0.4)',
                        '&::after': {
                          opacity: 1
                        }
                      },
                      '&:active': {
                        transform: 'translateY(-3px) scale(1.05)'
                      }
                    }}
                  >
                    İlerle
                  </Button>
                </Box>
              </Box>
            </Fade>
          )}
          
          {/* Adım 3: AYT Netleri */}
          {activeStep === 2 && (
            <Fade in={activeStep === 2} timeout={800}>
              <Box>
                {/* Header with Icon */}
                <Box sx={{ 
                  display: 'flex', 
                  alignItems: 'center', 
                  justifyContent: 'center',
                  mb: 6 
                }}>
                  <Box sx={{
                    width: 80,
                    height: 80,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    mr: 3,
                    boxShadow: '0 12px 30px rgba(240, 147, 251, 0.4)',
                    position: 'relative',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '50%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <TrendingUpIcon sx={{ 
                      color: '#ffffff', 
                      fontSize: '2.5rem',
                      position: 'relative',
                      zIndex: 1
                    }} />
                  </Box>
                  <Box>
                    <Typography variant="h4" sx={{ 
                      mb: 1, 
                      fontWeight: 800, 
                      color: '#ffffff',
                      fontFamily: '"Satoshi", "Inter", sans-serif'
                    }}>
                      AYT Sonuçlarınız
                    </Typography>
                    <Typography variant="h6" sx={{ 
                      color: 'rgba(255, 255, 255, 0.8)',
                      fontWeight: 500
                    }}>
                      Son girdiğiniz AYT denemesindeki doğru, yanlış ve boş sayılarınızı giriniz.
                    </Typography>
                  </Box>
                </Box>
                
                {/* Modern AYT Subject Cards Grid */}
                <Box sx={{ 
                  display: 'grid',
                  gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', lg: '1fr 1fr 1fr' },
                  gap: 3,
                  maxWidth: '1200px',
                  mx: 'auto',
                  mb: 6,
                  '& .MuiOutlinedInput-input': {
                    color: '#2d3748 !important',
                    fontWeight: '700 !important'
                  }
                }}>
                  {/* Türk Dili ve Edebiyatı */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.04) 100%)',
                    backdropFilter: 'blur(20px)',
                    borderRadius: '16px',
                    border: '2px solid rgba(255, 255, 255, 0.15)',
                    p: 3,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.3s ease',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(156, 39, 176, 0.08) 0%, rgba(123, 31, 162, 0.08) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-4px)',
                      boxShadow: '0 12px 25px rgba(156, 39, 176, 0.2)',
                      borderColor: 'rgba(156, 39, 176, 0.3)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 40,
                        height: 40,
                        borderRadius: '12px',
                        background: 'linear-gradient(135deg, #9C27B0 0%, #7B1FA2 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 2,
                        color: '#ffffff',
                        boxShadow: '0 4px 12px rgba(156, 39, 176, 0.3)'
                      }}>
                        <MenuBookIcon sx={{ 
                          fontSize: '1.2rem',
                          filter: 'drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h6" sx={{ 
                          color: '#ffffff',
                          fontWeight: 700,
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          fontSize: '0.95rem'
                        }}>
                          Türk Dili ve Edebiyatı
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500,
                          fontSize: '0.8rem'
                        }}>
                          24 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Kompakt Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 1.5, 
                      mb: 2, 
                      position: 'relative', 
                      zIndex: 1,
                      justifyContent: 'center'
                    }}>
                      {/* Doğru */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                        <Typography variant="body2" sx={{ 
                          color: '#43e97b',
                          fontWeight: 700,
                          fontSize: '0.9rem'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 24 } }}
                          value={formData.aytScores.literature.correct}
                          onChange={(e) => handleScoreChange('ayt', 'literature', 'correct', e.target.value)}
                          sx={{
                            width: '50px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '8px',
                              background: 'rgba(255, 255, 255, 0.9)',
                              border: '1px solid rgba(67, 233, 123, 0.4)',
                              height: '32px',
                              '&:hover': {
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '700 !important',
                              fontSize: '0.85rem',
                              color: '#43e97b !important',
                              padding: '4px 8px'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                        <Typography variant="body2" sx={{ 
                          color: '#ef4444',
                          fontWeight: 700,
                          fontSize: '0.9rem'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 24 } }}
                          value={formData.aytScores.literature.wrong}
                          onChange={(e) => handleScoreChange('ayt', 'literature', 'wrong', e.target.value)}
                          sx={{
                            width: '50px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '8px',
                              background: 'rgba(255, 255, 255, 0.9)',
                              border: '1px solid rgba(239, 68, 68, 0.4)',
                              height: '32px',
                              '&:hover': {
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '700 !important',
                              fontSize: '0.85rem',
                              color: '#ef4444 !important',
                              padding: '4px 8px'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                        <Typography variant="body2" sx={{ 
                          color: '#fb923c',
                          fontWeight: 700,
                          fontSize: '0.9rem'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 24 } }}
                          value={formData.aytScores.literature.empty}
                          onChange={(e) => handleScoreChange('ayt', 'literature', 'empty', e.target.value)}
                          sx={{
                            width: '50px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '8px',
                              background: 'rgba(255, 255, 255, 0.9)',
                              border: '1px solid rgba(251, 146, 60, 0.4)',
                              height: '32px',
                              '&:hover': {
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '700 !important',
                              fontSize: '0.85rem',
                              color: '#fb923c !important',
                              padding: '4px 8px'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 1.5,
                      borderRadius: '12px',
                      background: 'linear-gradient(135deg, #9C27B0 0%, #7B1FA2 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 4px 12px rgba(156, 39, 176, 0.3)'
                    }}>
                      <Typography variant="caption" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        fontSize: '0.7rem'
                      }}>
                        NET
                      </Typography>
                      <Typography variant="h6" sx={{ 
                        color: '#ffffff',
                        fontWeight: 800,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        fontSize: '1rem'
                      }}>
                        {calculateAYTNet('literature')}
                      </Typography>
                    </Box>
                  </Box>

                  {/* Tarih-1 */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.04) 100%)',
                    backdropFilter: 'blur(20px)',
                    borderRadius: '16px',
                    border: '2px solid rgba(255, 255, 255, 0.15)',
                    p: 3,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.3s ease',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(244, 63, 94, 0.08) 0%, rgba(220, 38, 127, 0.08) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-4px)',
                      boxShadow: '0 12px 25px rgba(244, 63, 94, 0.2)',
                      borderColor: 'rgba(244, 63, 94, 0.3)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 40,
                        height: 40,
                        borderRadius: '12px',
                        background: 'linear-gradient(135deg, #F43F5E 0%, #DC267F 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 2,
                        color: '#ffffff',
                        boxShadow: '0 4px 12px rgba(244, 63, 94, 0.3)'
                      }}>
                        <HistoryIcon sx={{ 
                          fontSize: '1.2rem',
                          filter: 'drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h6" sx={{ 
                          color: '#ffffff',
                          fontWeight: 700,
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          fontSize: '0.95rem'
                        }}>
                          Tarih-1
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500,
                          fontSize: '0.8rem'
                        }}>
                          10 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 1.5, 
                      mb: 2, 
                      position: 'relative', 
                      zIndex: 1,
                      justifyContent: 'center'
                    }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                        <Typography variant="body2" sx={{ 
                          color: '#43e97b',
                          fontWeight: 700,
                          fontSize: '0.9rem'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 10 } }}
                          value={formData.aytScores.history1.correct}
                          onChange={(e) => handleScoreChange('ayt', 'history1', 'correct', e.target.value)}
                          sx={{
                            width: '50px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '8px',
                              background: 'rgba(255, 255, 255, 0.9)',
                              border: '1px solid rgba(67, 233, 123, 0.4)',
                              height: '32px',
                              '&:hover': {
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '700 !important',
                              fontSize: '0.85rem',
                              color: '#43e97b !important',
                              padding: '4px 8px'
                            }
                          }}
                        />
                      </Box>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                        <Typography variant="body2" sx={{ 
                          color: '#ef4444',
                          fontWeight: 700,
                          fontSize: '0.9rem'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 10 } }}
                          value={formData.aytScores.history1.wrong}
                          onChange={(e) => handleScoreChange('ayt', 'history1', 'wrong', e.target.value)}
                          sx={{
                            width: '50px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '8px',
                              background: 'rgba(255, 255, 255, 0.9)',
                              border: '1px solid rgba(239, 68, 68, 0.4)',
                              height: '32px',
                              '&:hover': {
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '700 !important',
                              fontSize: '0.85rem',
                              color: '#ef4444 !important',
                              padding: '4px 8px'
                            }
                          }}
                        />
                      </Box>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                        <Typography variant="body2" sx={{ 
                          color: '#fb923c',
                          fontWeight: 700,
                          fontSize: '0.9rem'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 10 } }}
                          value={formData.aytScores.history1.empty}
                          onChange={(e) => handleScoreChange('ayt', 'history1', 'empty', e.target.value)}
                          sx={{
                            width: '50px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '8px',
                              background: 'rgba(255, 255, 255, 0.9)',
                              border: '1px solid rgba(251, 146, 60, 0.4)',
                              height: '32px',
                              '&:hover': {
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '700 !important',
                              fontSize: '0.85rem',
                              color: '#fb923c !important',
                              padding: '4px 8px'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 1.5,
                      borderRadius: '12px',
                      background: 'linear-gradient(135deg, #F43F5E 0%, #DC267F 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 4px 12px rgba(244, 63, 94, 0.3)'
                    }}>
                      <Typography variant="caption" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        fontSize: '0.7rem'
                      }}>
                        NET
                      </Typography>
                      <Typography variant="h6" sx={{ 
                        color: '#ffffff',
                        fontWeight: 800,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        fontSize: '1rem'
                      }}>
                        {calculateAYTNet('history1')}
                      </Typography>
                    </Box>
                  </Box>

                  {/* Coğrafya-1 */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.04) 100%)',
                    backdropFilter: 'blur(20px)',
                    borderRadius: '16px',
                    border: '2px solid rgba(255, 255, 255, 0.15)',
                    p: 3,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.3s ease',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(16, 185, 129, 0.08) 0%, rgba(59, 130, 246, 0.08) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-4px)',
                      boxShadow: '0 12px 25px rgba(16, 185, 129, 0.2)',
                      borderColor: 'rgba(16, 185, 129, 0.3)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 40,
                        height: 40,
                        borderRadius: '12px',
                        background: 'linear-gradient(135deg, #10b981 0%, #3b82f6 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 2,
                        color: '#ffffff',
                        boxShadow: '0 4px 12px rgba(16, 185, 129, 0.3)'
                      }}>
                        <PublicIcon sx={{ 
                          fontSize: '1.2rem',
                          filter: 'drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h6" sx={{ 
                          color: '#ffffff',
                          fontWeight: 700,
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          fontSize: '0.95rem'
                        }}>
                          Coğrafya-1
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500,
                          fontSize: '0.8rem'
                        }}>
                          6 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 3, 
                      mb: 4, 
                      position: 'relative', 
                      zIndex: 1,
                      flexWrap: 'wrap',
                      justifyContent: 'center'
                    }}>
                      {/* Doğru Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#43e97b',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(67, 233, 123, 0.3)'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 14 } }}
                          value={formData.aytScores.physics.correct}
                          onChange={(e) => handleScoreChange('ayt', 'physics', 'correct', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(67, 233, 123, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(67, 233, 123, 0.3)',
                                borderColor: '#43e97b'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(67, 233, 123, 0.4)',
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#43e97b !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#ef4444',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(239, 68, 68, 0.3)'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 14 } }}
                          value={formData.aytScores.physics.wrong}
                          onChange={(e) => handleScoreChange('ayt', 'physics', 'wrong', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(239, 68, 68, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(239, 68, 68, 0.3)',
                                borderColor: '#ef4444'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(239, 68, 68, 0.4)',
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#ef4444 !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#fb923c',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(251, 146, 60, 0.3)'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 14 } }}
                          value={formData.aytScores.physics.empty}
                          onChange={(e) => handleScoreChange('ayt', 'physics', 'empty', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(251, 146, 60, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(251, 146, 60, 0.3)',
                                borderColor: '#fb923c'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(251, 146, 60, 0.4)',
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#fb923c !important'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #10b981 0%, #3b82f6 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 12px 30px rgba(16, 185, 129, 0.4)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        mb: 1,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        NET PUANINIZ
                      </Typography>
                      <Typography variant="h4" sx={{ 
                        color: '#ffffff',
                        fontWeight: 900,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        {calculateAYTNet('physics')}
                      </Typography>
                    </Box>
                  </Box>
                  
                  {/* Kimya - Premium Card */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    backdropFilter: 'blur(25px)',
                    borderRadius: '24px',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    p: 5,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(245, 101, 101, 0.1) 0%, rgba(251, 146, 60, 0.1) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-8px) scale(1.02)',
                      boxShadow: '0 25px 60px rgba(245, 101, 101, 0.3)',
                      borderColor: 'rgba(245, 101, 101, 0.4)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 4, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 70,
                        height: 70,
                        borderRadius: '20px',
                        background: 'linear-gradient(135deg, #f56565 0%, #fb923c 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3,
                        color: '#ffffff',
                        boxShadow: '0 12px 30px rgba(245, 101, 101, 0.4)',
                        position: 'relative',
                        '&::before': {
                          content: '""',
                          position: 'absolute',
                          top: '2px',
                          left: '2px',
                          right: '2px',
                          height: '60%',
                          background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                          borderRadius: '18px 18px 0 0'
                        }
                      }}>
                        <ScienceIcon sx={{ 
                          fontSize: '2.2rem',
                          position: 'relative',
                          zIndex: 1,
                          filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h5" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          mb: 1,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          Kimya
                        </Typography>
                        <Typography variant="body1" sx={{ 
                          color: 'rgba(255, 255, 255, 0.8)',
                          fontWeight: 600,
                          fontSize: '1.1rem'
                        }}>
                          13 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 3, 
                      mb: 4, 
                      position: 'relative', 
                      zIndex: 1,
                      flexWrap: 'wrap',
                      justifyContent: 'center'
                    }}>
                      {/* Doğru Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#43e97b',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(67, 233, 123, 0.3)'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 13 } }}
                          value={formData.aytScores.chemistry.correct}
                          onChange={(e) => handleScoreChange('ayt', 'chemistry', 'correct', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(67, 233, 123, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(67, 233, 123, 0.3)',
                                borderColor: '#43e97b'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(67, 233, 123, 0.4)',
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#43e97b !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#ef4444',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(239, 68, 68, 0.3)'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 13 } }}
                          value={formData.aytScores.chemistry.wrong}
                          onChange={(e) => handleScoreChange('ayt', 'chemistry', 'wrong', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(239, 68, 68, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(239, 68, 68, 0.3)',
                                borderColor: '#ef4444'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(239, 68, 68, 0.4)',
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#ef4444 !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#fb923c',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(251, 146, 60, 0.3)'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 13 } }}
                          value={formData.aytScores.chemistry.empty}
                          onChange={(e) => handleScoreChange('ayt', 'chemistry', 'empty', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(251, 146, 60, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(251, 146, 60, 0.3)',
                                borderColor: '#fb923c'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(251, 146, 60, 0.4)',
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#fb923c !important'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #f56565 0%, #fb923c 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 12px 30px rgba(245, 101, 101, 0.4)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        mb: 1,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        NET PUANINIZ
                      </Typography>
                      <Typography variant="h4" sx={{ 
                        color: '#ffffff',
                        fontWeight: 900,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        {calculateAYTNet('chemistry')}
                      </Typography>
                    </Box>
                  </Box>
                  
                  {/* Biyoloji - Premium Card */}
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    backdropFilter: 'blur(25px)',
                    borderRadius: '24px',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    p: 5,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(167, 139, 250, 0.1) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-8px) scale(1.02)',
                      boxShadow: '0 25px 60px rgba(139, 92, 246, 0.3)',
                      borderColor: 'rgba(139, 92, 246, 0.4)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 4, position: 'relative', zIndex: 1 }}>
                      <Box sx={{
                        width: 70,
                        height: 70,
                        borderRadius: '20px',
                        background: 'linear-gradient(135deg, #8b5cf6 0%, #a78bfa 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3,
                        color: '#ffffff',
                        boxShadow: '0 12px 30px rgba(139, 92, 246, 0.4)',
                        position: 'relative',
                        '&::before': {
                          content: '""',
                          position: 'absolute',
                          top: '2px',
                          left: '2px',
                          right: '2px',
                          height: '60%',
                          background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                          borderRadius: '18px 18px 0 0'
                        }
                      }}>
                        <ScienceIcon sx={{ 
                          fontSize: '2.2rem',
                          position: 'relative',
                          zIndex: 1,
                          filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box>
                        <Typography variant="h5" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          mb: 1,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          Biyoloji
                        </Typography>
                        <Typography variant="body1" sx={{ 
                          color: 'rgba(255, 255, 255, 0.8)',
                          fontWeight: 600,
                          fontSize: '1.1rem'
                        }}>
                          13 Soru
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* D: Y: B: Input Layout */}
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 3, 
                      mb: 4, 
                      position: 'relative', 
                      zIndex: 1,
                      flexWrap: 'wrap',
                      justifyContent: 'center'
                    }}>
                      {/* Doğru Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#43e97b',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(67, 233, 123, 0.3)'
                        }}>
                          D:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 13 } }}
                          value={formData.aytScores.biology.correct}
                          onChange={(e) => handleScoreChange('ayt', 'biology', 'correct', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(67, 233, 123, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(67, 233, 123, 0.3)',
                                borderColor: '#43e97b'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(67, 233, 123, 0.4)',
                                borderColor: '#43e97b'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#43e97b !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Yanlış Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#ef4444',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(239, 68, 68, 0.3)'
                        }}>
                          Y:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 13 } }}
                          value={formData.aytScores.biology.wrong}
                          onChange={(e) => handleScoreChange('ayt', 'biology', 'wrong', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(239, 68, 68, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(239, 68, 68, 0.3)',
                                borderColor: '#ef4444'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(239, 68, 68, 0.4)',
                                borderColor: '#ef4444'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#ef4444 !important'
                            }
                          }}
                        />
                      </Box>

                      {/* Boş Section */}
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>
                        <Typography variant="h6" sx={{ 
                          color: '#fb923c',
                          fontWeight: 800,
                          fontSize: '1.3rem',
                          fontFamily: '"Satoshi", "Inter", sans-serif',
                          textShadow: '0 2px 4px rgba(251, 146, 60, 0.3)'
                        }}>
                          B:
                        </Typography>
                        <TextField
                          type="number"
                          InputProps={{ inputProps: { min: 0, max: 13 } }}
                          value={formData.aytScores.biology.empty}
                          onChange={(e) => handleScoreChange('ayt', 'biology', 'empty', e.target.value)}
                          sx={{
                            width: '80px',
                            '& .MuiOutlinedInput-root': {
                              borderRadius: '12px',
                              background: 'rgba(255, 255, 255, 0.95)',
                              backdropFilter: 'blur(10px)',
                              border: '2px solid rgba(251, 146, 60, 0.4)',
                              height: '48px',
                              transition: 'all 0.3s ease',
                              '&:hover': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 8px 25px rgba(251, 146, 60, 0.3)',
                                borderColor: '#fb923c'
                              },
                              '&.Mui-focused': {
                                transform: 'translateY(-2px)',
                                boxShadow: '0 12px 30px rgba(251, 146, 60, 0.4)',
                                borderColor: '#fb923c'
                              }
                            },
                            '& .MuiOutlinedInput-input': {
                              textAlign: 'center',
                              fontWeight: '800 !important',
                              fontSize: '1.1rem',
                              color: '#fb923c !important'
                            }
                          }}
                        />
                      </Box>
                    </Box>
                    
                    <Box sx={{
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #8b5cf6 0%, #a78bfa 100%)',
                      textAlign: 'center',
                      position: 'relative',
                      zIndex: 1,
                      boxShadow: '0 12px 30px rgba(139, 92, 246, 0.4)',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.9)',
                        fontWeight: 600,
                        mb: 1,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        NET PUANINIZ
                      </Typography>
                      <Typography variant="h4" sx={{ 
                        color: '#ffffff',
                        fontWeight: 900,
                        fontFamily: '"Satoshi", "Inter", sans-serif',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        {calculateAYTNet('biology')}
                      </Typography>
                    </Box>
                  </Box>
                </Box>
                
                {/* Modern Navigation Buttons */}
                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 6 }}>
                  <Button
                    variant="outlined"
                    startIcon={<ArrowBackIcon />}
                    onClick={handleBack}
                    sx={{
                      borderColor: 'rgba(255, 255, 255, 0.3)',
                      color: '#ffffff',
                      fontWeight: 700,
                      px: 4,
                      py: 2,
                      borderRadius: '16px',
                      fontSize: '1.1rem',
                      minHeight: '56px',
                      minWidth: '120px',
                      backdropFilter: 'blur(10px)',
                      background: 'rgba(255, 255, 255, 0.1)',
                      transition: 'all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                      '&:hover': {
                        transform: 'translateY(-2px)',
                        borderColor: 'rgba(255, 255, 255, 0.5)',
                        background: 'rgba(255, 255, 255, 0.15)',
                        boxShadow: '0 8px 25px rgba(255, 255, 255, 0.2)'
                      }
                    }}
                  >
                    Geri
                  </Button>
                  <Button
                    variant="contained"
                    endIcon={<NavigateNextIcon />}
                    onClick={handleNext}
                    sx={{
                      background: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
                      color: '#ffffff',
                      fontWeight: 700,
                      px: 6,
                      py: 2,
                      borderRadius: '16px',
                      fontSize: '1.1rem',
                      minHeight: '56px',
                      minWidth: '160px',
                      boxShadow: '0 8px 25px rgba(67, 233, 123, 0.4)',
                      transition: 'all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                      border: '2px solid rgba(255, 255, 255, 0.2)',
                      position: 'relative',
                      overflow: 'hidden',
                      textTransform: 'none',
                      letterSpacing: '0.5px',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0,
                        background: 'linear-gradient(135deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0.05) 100%)',
                        transition: 'opacity 0.3s ease'
                      },
                      '&:hover': {
                        transform: 'translateY(-4px) scale(1.02)',
                        boxShadow: '0 16px 40px rgba(67, 233, 123, 0.6)',
                        '&::before': {
                          opacity: 0.9
                        }
                      },
                      '&:active': {
                        transform: 'translateY(-2px) scale(1.01)'
                      }
                    }}
                  >
                    Sonuçları Gör
                  </Button>
                </Box>
              </Box>
            </Fade>
          )}
          
          {/* Sonuçlar Adımı */}
          {activeStep === 3 && (
            <Fade in={activeStep === 3} timeout={500}>
              <Box>
                <Box sx={{ 
                  textAlign: 'center', 
                  mb: 5,
                  background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%)',
                  backdropFilter: 'blur(20px)',
                  borderRadius: '24px',
                  p: 4,
                  border: '1px solid rgba(255, 255, 255, 0.2)'
                }}>
                  <Typography variant="h3" sx={{ 
                    fontWeight: 900, 
                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                    backgroundClip: 'text',
                    textFillColor: 'transparent',
                    mb: 2,
                    fontFamily: '"Satoshi", "Inter", sans-serif'
                  }}>
                    🎉 Sonuçlarınız Hazır!
                  </Typography>
                  <Typography variant="h6" sx={{ 
                    color: 'rgba(255, 255, 255, 0.8)', 
                    fontWeight: 600,
                    fontFamily: '"Satoshi", "Inter", sans-serif'
                  }}>
                    Girdiğiniz bilgilere göre detaylı analiz sonuçlarınız
                  </Typography>
                </Box>
                
                {/* Kişisel Bilgiler - Premium Card */}
                <Box sx={{
                  background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                  backdropFilter: 'blur(25px)',
                  borderRadius: '24px',
                  border: '2px solid rgba(255, 255, 255, 0.2)',
                  p: 4,
                  mb: 4,
                  position: 'relative',
                  overflow: 'hidden',
                  transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                  '&::before': {
                    content: '""',
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                    background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    opacity: 0,
                    transition: 'opacity 0.3s ease',
                    zIndex: 0
                  },
                  '&:hover': {
                    transform: 'translateY(-8px) scale(1.02)',
                    boxShadow: '0 25px 60px rgba(63, 81, 181, 0.3)',
                    borderColor: 'rgba(63, 81, 181, 0.4)',
                    '&::before': {
                      opacity: 1
                    }
                  }
                }}>
                  {/* Premium Header */}
                  <Box sx={{
                    display: 'flex',
                    alignItems: 'center',
                    mb: 3,
                    p: 3,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                    position: 'relative',
                    overflow: 'hidden',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '60%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <Box sx={{
                      width: 60,
                      height: 60,
                      borderRadius: '16px',
                      background: 'rgba(255, 255, 255, 0.2)',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      mr: 3,
                      position: 'relative',
                      zIndex: 1
                    }}>
                      <LanguageIcon sx={{ 
                        fontSize: '2rem',
                        color: '#ffffff',
                        filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                      }} />
                    </Box>
                    <Box sx={{ position: 'relative', zIndex: 1 }}>
                      <Typography variant="h5" sx={{ 
                        color: '#ffffff',
                        fontWeight: 800,
                        fontFamily: '"Satoshi", "Inter", sans-serif'
                      }}>
                        Kişisel Bilgiler
                      </Typography>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.8)',
                        fontWeight: 500
                      }}>
                        Profilinize ait bilgiler
                      </Typography>
                    </Box>
                  </Box>
                  
                  {/* Content */}
                  <Box sx={{ px: 2, position: 'relative', zIndex: 1 }}>
                    <Box sx={{
                      display: 'flex',
                      alignItems: 'center',
                      p: 3,
                      borderRadius: '16px',
                      background: 'rgba(255, 255, 255, 0.1)',
                      border: '1px solid rgba(255, 255, 255, 0.2)'
                    }}>
                      <Box sx={{
                        width: 50,
                        height: 50,
                        borderRadius: '12px',
                        background: 'linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3
                      }}>
                        <PublicIcon sx={{ color: '#ffffff', fontSize: '1.5rem' }} />
                      </Box>
                      <Box>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500,
                          mb: 0.5
                        }}>
                          Bulunduğunuz İl
                        </Typography>
                        <Typography variant="h6" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {formData.province}
                        </Typography>
                      </Box>
                    </Box>
                  </Box>
                </Box>
                
                {/* TYT Sonuçları - Premium Card */}
                <Box sx={{
                  background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                  backdropFilter: 'blur(25px)',
                  borderRadius: '24px',
                  border: '2px solid rgba(255, 255, 255, 0.2)',
                  p: 4,
                  mb: 4,
                  position: 'relative',
                  overflow: 'hidden',
                  transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                  '&::before': {
                    content: '""',
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                    background: 'linear-gradient(135deg, rgba(76, 175, 80, 0.1) 0%, rgba(46, 125, 50, 0.1) 100%)',
                    opacity: 0,
                    transition: 'opacity 0.3s ease',
                    zIndex: 0
                  },
                  '&:hover': {
                    transform: 'translateY(-8px) scale(1.02)',
                    boxShadow: '0 25px 60px rgba(76, 175, 80, 0.3)',
                    borderColor: 'rgba(76, 175, 80, 0.4)',
                    '&::before': {
                      opacity: 1
                    }
                  }
                }}>
                  {/* Premium Header */}
                  <Box sx={{
                    display: 'flex',
                    alignItems: 'center',
                    mb: 4,
                    p: 3,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%)',
                    position: 'relative',
                    overflow: 'hidden',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '60%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <Box sx={{
                      width: 60,
                      height: 60,
                      borderRadius: '16px',
                      background: 'rgba(255, 255, 255, 0.2)',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      mr: 3,
                      position: 'relative',
                      zIndex: 1
                    }}>
                      <TrendingUpIcon sx={{ 
                        fontSize: '2rem',
                        color: '#ffffff',
                        filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                      }} />
                    </Box>
                    <Box sx={{ position: 'relative', zIndex: 1 }}>
                      <Typography variant="h5" sx={{ 
                        color: '#ffffff',
                        fontWeight: 800,
                        fontFamily: '"Satoshi", "Inter", sans-serif'
                      }}>
                        TYT Sonuçlarınız
                      </Typography>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.8)',
                        fontWeight: 500
                      }}>
                        Temel Yeterlilik Testi Performansı
                      </Typography>
                    </Box>
                  </Box>
                  
                  {/* TYT Dersler Grid */}
                  <Grid container spacing={3} sx={{ mb: 4, position: 'relative', zIndex: 1 }}>
                    {/* Türkçe */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(156, 39, 176, 0.15) 0%, rgba(123, 31, 162, 0.15) 100%)',
                        border: '1px solid rgba(156, 39, 176, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(156, 39, 176, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <MenuBookIcon sx={{ color: '#9C27B0', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Türkçe
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#9C27B0',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateTYTNet('turkish')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                    
                    {/* Sosyal Bilimler */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(255, 152, 0, 0.15) 0%, rgba(245, 124, 0, 0.15) 100%)',
                        border: '1px solid rgba(255, 152, 0, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(255, 152, 0, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <PublicIcon sx={{ color: '#FF9800', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Sosyal Bilimler
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#FF9800',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateTYTNet('social')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                    
                    {/* Matematik */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(33, 150, 243, 0.15) 0%, rgba(21, 101, 192, 0.15) 100%)',
                        border: '1px solid rgba(33, 150, 243, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(33, 150, 243, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <FunctionsIcon sx={{ color: '#2196F3', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Matematik
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#2196F3',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateTYTNet('mathTYT')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                    
                    {/* Fen Bilimleri */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(244, 67, 54, 0.15) 0%, rgba(198, 40, 40, 0.15) 100%)',
                        border: '1px solid rgba(244, 67, 54, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(244, 67, 54, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <ScienceIcon sx={{ color: '#F44336', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Fen Bilimleri
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#F44336',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateTYTNet('science')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                  </Grid>
                  
                  {/* Toplam TYT */}
                  <Box sx={{
                    p: 4,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%)',
                    textAlign: 'center',
                    position: 'relative',
                    zIndex: 1,
                    boxShadow: '0 12px 30px rgba(76, 175, 80, 0.4)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '60%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <Typography variant="body2" sx={{ 
                      color: 'rgba(255, 255, 255, 0.9)',
                      fontWeight: 600,
                      mb: 1,
                      position: 'relative',
                      zIndex: 1
                    }}>
                      TOPLAM TYT NETİNİZ
                    </Typography>
                    <Typography variant="h3" sx={{ 
                      color: '#ffffff',
                      fontWeight: 900,
                      fontFamily: '"Satoshi", "Inter", sans-serif',
                      position: 'relative',
                      zIndex: 1
                    }}>
                      {calculateTotalTYTNet()}
                    </Typography>
                  </Box>
                </Box>
                
                {/* AYT Sonuçları - Premium Card */}
                <Box sx={{
                  background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                  backdropFilter: 'blur(25px)',
                  borderRadius: '24px',
                  border: '2px solid rgba(255, 255, 255, 0.2)',
                  p: 4,
                  mb: 4,
                  position: 'relative',
                  overflow: 'hidden',
                  transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                  '&::before': {
                    content: '""',
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                    background: 'linear-gradient(135deg, rgba(63, 81, 181, 0.1) 0%, rgba(48, 63, 159, 0.1) 100%)',
                    opacity: 0,
                    transition: 'opacity 0.3s ease',
                    zIndex: 0
                  },
                  '&:hover': {
                    transform: 'translateY(-8px) scale(1.02)',
                    boxShadow: '0 25px 60px rgba(63, 81, 181, 0.3)',
                    borderColor: 'rgba(63, 81, 181, 0.4)',
                    '&::before': {
                      opacity: 1
                    }
                  }
                }}>
                  {/* Premium Header */}
                  <Box sx={{
                    display: 'flex',
                    alignItems: 'center',
                    mb: 4,
                    p: 3,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #3F51B5 0%, #303F9F 100%)',
                    position: 'relative',
                    overflow: 'hidden',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '60%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <Box sx={{
                      width: 60,
                      height: 60,
                      borderRadius: '16px',
                      background: 'rgba(255, 255, 255, 0.2)',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      mr: 3,
                      position: 'relative',
                      zIndex: 1
                    }}>
                      <BarChartIcon sx={{ 
                        fontSize: '2rem',
                        color: '#ffffff',
                        filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                      }} />
                    </Box>
                    <Box sx={{ position: 'relative', zIndex: 1 }}>
                      <Typography variant="h5" sx={{ 
                        color: '#ffffff',
                        fontWeight: 800,
                        fontFamily: '"Satoshi", "Inter", sans-serif'
                      }}>
                        AYT Sonuçlarınız
                      </Typography>
                      <Typography variant="body2" sx={{ 
                        color: 'rgba(255, 255, 255, 0.8)',
                        fontWeight: 500
                      }}>
                        Alan Yeterlilik Testi Performansı
                      </Typography>
                    </Box>
                  </Box>
                  
                  {/* AYT Dersler Grid */}
                  <Grid container spacing={3} sx={{ mb: 4, position: 'relative', zIndex: 1 }}>
                    {/* Matematik AYT */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(33, 150, 243, 0.15) 0%, rgba(21, 101, 192, 0.15) 100%)',
                        border: '1px solid rgba(33, 150, 243, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(33, 150, 243, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <FunctionsIcon sx={{ color: '#2196F3', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Matematik
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#2196F3',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateAYTNet('mathAYT')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                    
                    {/* Fizik */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(0, 188, 212, 0.15) 0%, rgba(0, 151, 167, 0.15) 100%)',
                        border: '1px solid rgba(0, 188, 212, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(0, 188, 212, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <ScienceIcon sx={{ color: '#00BCD4', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Fizik
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#00BCD4',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateAYTNet('physics')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                    
                    {/* Kimya */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(244, 67, 54, 0.15) 0%, rgba(198, 40, 40, 0.15) 100%)',
                        border: '1px solid rgba(244, 67, 54, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(244, 67, 54, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <ScienceIcon sx={{ color: '#F44336', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Kimya
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#F44336',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateAYTNet('chemistry')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                    
                    {/* Biyoloji */}
                    <Grid item xs={12} md={6}>
                      <Box sx={{
                        p: 3,
                        borderRadius: '16px',
                        background: 'linear-gradient(135deg, rgba(76, 175, 80, 0.15) 0%, rgba(46, 125, 50, 0.15) 100%)',
                        border: '1px solid rgba(76, 175, 80, 0.3)',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-4px)',
                          boxShadow: '0 12px 30px rgba(76, 175, 80, 0.2)'
                        }
                      }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <ScienceIcon sx={{ color: '#4CAF50', mr: 2, fontSize: '1.5rem' }} />
                          <Typography variant="h6" sx={{ 
                            color: '#ffffff',
                            fontWeight: 700,
                            fontFamily: '"Satoshi", "Inter", sans-serif'
                          }}>
                            Biyoloji
                          </Typography>
                        </Box>
                        <Typography variant="h4" sx={{ 
                          color: '#4CAF50',
                          fontWeight: 900,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          {calculateAYTNet('biology')}
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontWeight: 500
                        }}>
                          net puan
                        </Typography>
                      </Box>
                    </Grid>
                  </Grid>
                  
                  {/* Toplam AYT */}
                  <Box sx={{
                    p: 4,
                    borderRadius: '20px',
                    background: 'linear-gradient(135deg, #3F51B5 0%, #303F9F 100%)',
                    textAlign: 'center',
                    position: 'relative',
                    zIndex: 1,
                    boxShadow: '0 12px 30px rgba(63, 81, 181, 0.4)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: '2px',
                      left: '2px',
                      right: '2px',
                      height: '60%',
                      background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                      borderRadius: '18px 18px 0 0'
                    }
                  }}>
                    <Typography variant="body2" sx={{ 
                      color: 'rgba(255, 255, 255, 0.9)',
                      fontWeight: 600,
                      mb: 1,
                      position: 'relative',
                      zIndex: 1
                    }}>
                      TOPLAM AYT NETİNİZ
                    </Typography>
                    <Typography variant="h3" sx={{ 
                      color: '#ffffff',
                      fontWeight: 900,
                      fontFamily: '"Satoshi", "Inter", sans-serif',
                      position: 'relative',
                      zIndex: 1
                    }}>
                      {calculateTotalAYTNet()}
                    </Typography>
                  </Box>
                </Box>
                
                {/* Konfeti efekti */}
                {showConfetti && (
                  <ReactConfetti
                    width={windowSize.width}
                    height={windowSize.height}
                    recycle={false}
                    numberOfPieces={500}
                    gravity={0.1}
                    colors={[
                      '#3F51B5', '#4CAF50', '#FFC107', '#F44336', '#9C27B0', 
                      '#2196F3', '#FF9800', '#00BCD4', '#E91E63', '#FFEB3B'
                    ]}
                  />
                )}
                
                {/* RekaNET Sıralamanız - Premium Card */}
                {comparisonResult && (
                  <Box sx={{
                    background: 'linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%)',
                    backdropFilter: 'blur(25px)',
                    borderRadius: '24px',
                    border: '2px solid rgba(255, 255, 255, 0.2)',
                    p: 4,
                    mb: 4,
                    position: 'relative',
                    overflow: 'hidden',
                    transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                    '&::before': {
                      content: '""',
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      right: 0,
                      bottom: 0,
                      background: 'linear-gradient(135deg, rgba(255, 215, 0, 0.1) 0%, rgba(255, 193, 7, 0.1) 100%)',
                      opacity: 0,
                      transition: 'opacity 0.3s ease',
                      zIndex: 0
                    },
                    '&:hover': {
                      transform: 'translateY(-8px) scale(1.02)',
                      boxShadow: '0 25px 60px rgba(255, 215, 0, 0.3)',
                      borderColor: 'rgba(255, 215, 0, 0.4)',
                      '&::before': {
                        opacity: 1
                      }
                    }
                  }}>
                    {/* Premium Header */}
                    <Box sx={{
                      display: 'flex',
                      alignItems: 'center',
                      mb: 4,
                      p: 3,
                      borderRadius: '20px',
                      background: 'linear-gradient(135deg, #FFD700 0%, #FFC107 100%)',
                      position: 'relative',
                      overflow: 'hidden',
                      '&::before': {
                        content: '""',
                        position: 'absolute',
                        top: '2px',
                        left: '2px',
                        right: '2px',
                        height: '60%',
                        background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                        borderRadius: '18px 18px 0 0'
                      }
                    }}>
                      <Box sx={{
                        width: 60,
                        height: 60,
                        borderRadius: '16px',
                        background: 'rgba(255, 255, 255, 0.2)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        mr: 3,
                        position: 'relative',
                        zIndex: 1
                      }}>
                        <EmojiEventsIcon sx={{ 
                          fontSize: '2rem',
                          color: '#ffffff',
                          filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                        }} />
                      </Box>
                      <Box sx={{ flex: 1, position: 'relative', zIndex: 1 }}>
                        <Typography variant="h5" sx={{ 
                          color: '#ffffff',
                          fontWeight: 800,
                          fontFamily: '"Satoshi", "Inter", sans-serif'
                        }}>
                          RekaNET Sıralamanız
                        </Typography>
                        <Typography variant="body2" sx={{ 
                          color: 'rgba(255, 255, 255, 0.8)',
                          fontWeight: 500
                        }}>
                          İl bazında sıralama performansınız
                        </Typography>
                      </Box>
                      <Box sx={{
                        display: 'flex',
                        alignItems: 'center',
                        background: 'rgba(255, 255, 255, 0.2)',
                        px: 2,
                        py: 1,
                        borderRadius: '12px',
                        position: 'relative',
                        zIndex: 1
                      }}>
                        <LanguageIcon sx={{ mr: 1, fontSize: 18, color: '#ffffff' }} />
                        <Typography variant="body2" sx={{ fontWeight: 700, color: '#ffffff' }}>
                          {comparisonResult.province}
                        </Typography>
                      </Box>
                    </Box>
                    
                    {/* İçerik */}
                    <Box sx={{ position: 'relative', zIndex: 1 }}>
                      <Grid container spacing={4}>
                        {/* Sol Kısım - Sıralama */}
                        <Grid item xs={12} md={7}>
                          <Box sx={{
                            p: 4,
                            borderRadius: '20px',
                            background: 'linear-gradient(135deg, rgba(255, 215, 0, 0.15) 0%, rgba(255, 193, 7, 0.15) 100%)',
                            border: '2px solid rgba(255, 215, 0, 0.3)',
                            height: '100%',
                            display: 'flex',
                            flexDirection: 'column',
                            transition: 'all 0.3s ease',
                            '&:hover': {
                              transform: 'translateY(-4px)',
                              boxShadow: '0 12px 30px rgba(255, 215, 0, 0.2)'
                            }
                          }}>
                            {/* Sıralama Bilgisi - Premium Display */}
                            <Box sx={{
                              p: 4,
                              borderRadius: '20px',
                              background: 'linear-gradient(135deg, #FFD700 0%, #FFC107 100%)',
                              textAlign: 'center',
                              mb: 3,
                              position: 'relative',
                              boxShadow: '0 12px 30px rgba(255, 215, 0, 0.4)',
                              '&::before': {
                                content: '""',
                                position: 'absolute',
                                top: '2px',
                                left: '2px',
                                right: '2px',
                                height: '60%',
                                background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                                borderRadius: '18px 18px 0 0'
                              }
                            }}>
                              <Box sx={{
                                width: 80,
                                height: 80,
                                borderRadius: '50%',
                                background: 'rgba(255, 255, 255, 0.2)',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                mx: 'auto',
                                mb: 3,
                                position: 'relative',
                                zIndex: 1
                              }}>
                                <EmojiEventsIcon sx={{ 
                                  fontSize: '3rem',
                                  color: '#ffffff',
                                  filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                                }} />
                              </Box>
                              
                              <Typography variant="h2" sx={{ 
                                color: '#ffffff',
                                fontWeight: 900,
                                fontFamily: '"Satoshi", "Inter", sans-serif',
                                position: 'relative',
                                zIndex: 1,
                                mb: 1
                              }}>
                                #{comparisonResult.rank}
                              </Typography>
                              
                              <Typography variant="h5" sx={{ 
                                color: 'rgba(255, 255, 255, 0.9)',
                                fontWeight: 700,
                                fontFamily: '"Satoshi", "Inter", sans-serif',
                                position: 'relative',
                                zIndex: 1,
                                mb: 2
                              }}>
                                Sıradasınız!
                              </Typography>
                              
                              <Typography variant="body1" sx={{ 
                                color: 'rgba(255, 255, 255, 0.8)',
                                fontWeight: 600,
                                position: 'relative',
                                zIndex: 1
                              }}>
                                📊 {comparisonResult.totalUsers + 1} katılımcı arasında
                              </Typography>
                            </Box>
                            
                            {/* Açıklama Kartı */}
                            <Box sx={{
                              p: 3,
                              borderRadius: '16px',
                              background: 'rgba(255, 255, 255, 0.1)',
                              border: '1px solid rgba(255, 255, 255, 0.2)',
                              mb: 3,
                              flex: 1
                            }}>
                              <Typography variant="body1" sx={{ 
                                color: 'rgba(255, 255, 255, 0.9)',
                                lineHeight: 1.7,
                                fontWeight: 500,
                                textAlign: 'center'
                              }}>
                                🎯 <strong style={{ color: '#FFD700' }}>VİNSURF</strong> sistemimizi kullanan ve <strong style={{ color: '#FFD700' }}>{comparisonResult.province}</strong> ilinde yaşayan diğer <strong style={{ color: '#FFD700' }}>{comparisonResult.totalUsers}</strong> kullanıcımız arasından <strong style={{ color: '#FFD700' }}>{comparisonResult.comparisonType === "TYT" ? "TYT" : "TYT+AYT"}</strong> netlerinizle bu başarıyı elde ettiniz!
                              </Typography>
                            </Box>
                            
                            {/* Kutla Butonu - Premium Style */}
                            <Button
                              variant="contained"
                              size="large"
                              startIcon={<CelebrationIcon />}
                              onClick={startConfetti}
                              sx={{
                                py: 2,
                                borderRadius: '16px',
                                fontWeight: 800,
                                textTransform: 'none',
                                fontSize: '1.1rem',
                                background: 'linear-gradient(135deg, #9C27B0 0%, #673AB7 100%)',
                                color: '#ffffff',
                                boxShadow: '0 8px 20px rgba(156, 39, 176, 0.4)',
                                transition: 'all 0.3s ease',
                                fontFamily: '"Satoshi", "Inter", sans-serif',
                                '&:hover': {
                                  transform: 'translateY(-2px)',
                                  boxShadow: '0 12px 30px rgba(156, 39, 176, 0.5)',
                                  background: 'linear-gradient(135deg, #673AB7 0%, #9C27B0 100%)'
                                }
                              }}
                            >
                              🎉 Başarını Kutla!
                            </Button>
                          </Box>
                        </Grid>
                        
                        {/* Sağ Kısım - Net Bilgileri */}
                        <Grid item xs={12} md={5}>
                          <Box sx={{
                            p: 4,
                            borderRadius: '20px',
                            background: 'linear-gradient(135deg, rgba(76, 175, 80, 0.15) 0%, rgba(46, 125, 50, 0.15) 100%)',
                            border: '2px solid rgba(76, 175, 80, 0.3)',
                            height: '100%',
                            display: 'flex',
                            flexDirection: 'column',
                            transition: 'all 0.3s ease',
                            '&:hover': {
                              transform: 'translateY(-4px)',
                              boxShadow: '0 12px 30px rgba(76, 175, 80, 0.2)'
                            }
                          }}>
                            {/* Premium Header */}
                            <Box sx={{
                              display: 'flex',
                              alignItems: 'center',
                              mb: 3,
                              p: 3,
                              borderRadius: '16px',
                              background: 'linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%)',
                              position: 'relative',
                              overflow: 'hidden',
                              '&::before': {
                                content: '""',
                                position: 'absolute',
                                top: '2px',
                                left: '2px',
                                right: '2px',
                                height: '60%',
                                background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                                borderRadius: '14px 14px 0 0'
                              }
                            }}>
                              <Box sx={{
                                width: 50,
                                height: 50,
                                borderRadius: '12px',
                                background: 'rgba(255, 255, 255, 0.2)',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                mr: 3,
                                position: 'relative',
                                zIndex: 1
                              }}>
                                <TrendingUpIcon sx={{ 
                                  fontSize: '1.5rem',
                                  color: '#ffffff',
                                  filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'
                                }} />
                              </Box>
                              <Typography variant="h6" sx={{ 
                                color: '#ffffff',
                                fontWeight: 800,
                                fontFamily: '"Satoshi", "Inter", sans-serif',
                                position: 'relative',
                                zIndex: 1
                              }}>
                                Net Bilgileriniz
                              </Typography>
                            </Box>
                            
                            {/* Net Detayları */}
                            <Box sx={{ flex: 1 }}>
                              <Grid container spacing={2} sx={{ mb: 3 }}>
                                {/* TYT Net */}
                                <Grid item xs={6}>
                                  <Box sx={{
                                    p: 3,
                                    borderRadius: '16px',
                                    background: 'linear-gradient(135deg, rgba(33, 150, 243, 0.15) 0%, rgba(21, 101, 192, 0.15) 100%)',
                                    border: '1px solid rgba(33, 150, 243, 0.3)',
                                    textAlign: 'center',
                                    transition: 'all 0.3s ease',
                                    '&:hover': {
                                      transform: 'translateY(-2px)',
                                      boxShadow: '0 8px 20px rgba(33, 150, 243, 0.2)'
                                    }
                                  }}>
                                    <Typography variant="body2" sx={{ 
                                      color: 'rgba(255, 255, 255, 0.8)',
                                      fontWeight: 600,
                                      mb: 1
                                    }}>
                                      TYT Net
                                    </Typography>
                                    <Typography variant="h4" sx={{ 
                                      color: '#2196F3',
                                      fontWeight: 900,
                                      fontFamily: '"Satoshi", "Inter", sans-serif'
                                    }}>
                                      {comparisonResult.tytNet}
                                    </Typography>
                                  </Box>
                                </Grid>
                                
                                {/* AYT Net */}
                                <Grid item xs={6}>
                                  <Box sx={{
                                    p: 3,
                                    borderRadius: '16px',
                                    background: comparisonResult.comparisonType === "TYT" ? 
                                      'linear-gradient(135deg, rgba(158, 158, 158, 0.15) 0%, rgba(117, 117, 117, 0.15) 100%)' :
                                      'linear-gradient(135deg, rgba(156, 39, 176, 0.15) 0%, rgba(123, 31, 162, 0.15) 100%)',
                                    border: comparisonResult.comparisonType === "TYT" ? 
                                      '1px solid rgba(158, 158, 158, 0.3)' :
                                      '1px solid rgba(156, 39, 176, 0.3)',
                                    textAlign: 'center',
                                    transition: 'all 0.3s ease',
                                    '&:hover': {
                                      transform: 'translateY(-2px)',
                                      boxShadow: comparisonResult.comparisonType === "TYT" ? 
                                        '0 8px 20px rgba(158, 158, 158, 0.2)' :
                                        '0 8px 20px rgba(156, 39, 176, 0.2)'
                                    }
                                  }}>
                                    <Typography variant="body2" sx={{ 
                                      color: 'rgba(255, 255, 255, 0.8)',
                                      fontWeight: 600,
                                      mb: 1
                                    }}>
                                      AYT Net
                                    </Typography>
                                    <Typography variant="h4" sx={{ 
                                      color: comparisonResult.comparisonType === "TYT" ? '#9E9E9E' : '#9C27B0',
                                      fontWeight: 900,
                                      fontFamily: '"Satoshi", "Inter", sans-serif'
                                    }}>
                                      {comparisonResult.aytNet}
                                    </Typography>
                                  </Box>
                                </Grid>
                              </Grid>
                              
                              {/* Toplam Net - Premium Display */}
                              <Box sx={{
                                p: 4,
                                borderRadius: '20px',
                                background: 'linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%)',
                                textAlign: 'center',
                                mb: 3,
                                position: 'relative',
                                boxShadow: '0 12px 30px rgba(76, 175, 80, 0.4)',
                                '&::before': {
                                  content: '""',
                                  position: 'absolute',
                                  top: '2px',
                                  left: '2px',
                                  right: '2px',
                                  height: '60%',
                                  background: 'linear-gradient(180deg, rgba(255,255,255,0.3) 0%, transparent 100%)',
                                  borderRadius: '18px 18px 0 0'
                                }
                              }}>
                                <Typography variant="body2" sx={{ 
                                  color: 'rgba(255, 255, 255, 0.9)',
                                  fontWeight: 600,
                                  mb: 1,
                                  position: 'relative',
                                  zIndex: 1
                                }}>
                                  TOPLAM NETİNİZ
                                </Typography>
                                <Typography variant="h2" sx={{ 
                                  color: '#ffffff',
                                  fontWeight: 900,
                                  fontFamily: '"Satoshi", "Inter", sans-serif',
                                  position: 'relative',
                                  zIndex: 1
                                }}>
                                  {comparisonResult.userNet}
                                </Typography>
                              </Box>
                              
                              {/* En Yüksek Net */}
                              <Box sx={{
                                p: 3,
                                borderRadius: '16px',
                                background: 'linear-gradient(135deg, rgba(255, 193, 7, 0.15) 0%, rgba(255, 152, 0, 0.15) 100%)',
                                border: '2px dashed rgba(255, 193, 7, 0.4)',
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center'
                              }}>
                                <Typography variant="body1" sx={{ 
                                  color: 'rgba(255, 255, 255, 0.9)',
                                  fontWeight: 700,
                                  fontFamily: '"Satoshi", "Inter", sans-serif'
                                }}>
                                  🏆 En Yüksek Net:
                                </Typography>
                                <Typography variant="h5" sx={{ 
                                  color: '#FFC107',
                                  fontWeight: 900,
                                  fontFamily: '"Satoshi", "Inter", sans-serif'
                                }}>
                                  {comparisonResult.highestNet}
                                </Typography>
                              </Box>
                            </Box>
                          </Box>
                        </Grid>
                      </Grid>
                    </Box>
                  </Box>
                )}
                
                {/* Hata mesajı */}
                {error && (
                  <Alert severity="warning" sx={{ mb: 4 }}>
                    {error}
                  </Alert>
                )}
                
                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>
                  <Button
                    variant="outlined"
                    startIcon={<ArrowBackIcon />}
                    onClick={handleBack}
                    sx={{
                      borderColor: '#3F51B5',
                      color: '#3F51B5',
                      '&:hover': {
                        borderColor: '#303F9F',
                        bgcolor: 'rgba(63, 81, 181, 0.05)'
                      }
                    }}
                  >
                    Geri
                  </Button>
                  <Box sx={{ display: 'flex', gap: 2 }}>
                    <Button
                      variant="contained"
                      onClick={async () => {
                        try {
                          // Verileri Firestore'a kaydet
                          // Kullanıcının AYT netleri girip girmediğini kontrol et
                          const hasAYTScores = Object.values(formData.aytScores).some(score => 
                            parseInt(score.correct) > 0 || parseInt(score.wrong) > 0
                          );
                          
                          await addDoc(collection(db, "rekanet_scores"), {
                            province: formData.province,
                            tytScores: formData.tytScores,
                            aytScores: formData.aytScores,
                            totalTYTNet: calculateTotalTYTNet(),
                            totalAYTNet: hasAYTScores ? calculateTotalAYTNet() : "0",
                            hasAYTScores: hasAYTScores,
                            timestamp: new Date()
                          });
                          alert('Bilgileriniz başarıyla kaydedildi!');
                        } catch (error) {
                          console.error("Error adding document: ", error);
                          alert('Bilgileriniz kaydedilirken bir hata oluştu!');
                        }
                      }}
                      sx={{
                        bgcolor: '#4CAF50',
                        '&:hover': {
                          bgcolor: '#388E3C'
                        }
                      }}
                    >
                      Kaydet
                    </Button>
                    <Button
                      variant="contained"
                      disabled={loading}
                      onClick={async () => {
                        setLoading(true);
                        setError(null);
                        setComparisonResult(null);
                        
                        try {
                          // İl seçilip seçilmediğini kontrol et
                          if (!formData.province) {
                            setError("Lütfen önce bir il seçiniz.");
                            setLoading(false);
                            return;
                          }
                          
                          // Seçilen ildeki diğer kullanıcıların verilerini çek
                          try {
                            const q = query(collection(db, "rekanet_scores"), where("province", "==", formData.province));
                            const querySnapshot = await getDocs(q);
                            
                            // Veri yoksa uyarı göster
                            if (querySnapshot.empty) {
                              setError(`${formData.province} ilinde henüz net bilgisi girilmemiş. İlk kaydeden siz olabilirsiniz!`);
                              setLoading(false);
                              return;
                            }
                            
                            // Kullanıcının AYT netleri girip girmediğini kontrol et
                            const hasAYTScores = Object.values(formData.aytScores).some(score => 
                              parseInt(score.correct) > 0 || parseInt(score.wrong) > 0
                            );
                            
                            // Kullanıcı netleri
                            const userTYTNet = parseFloat(calculateTotalTYTNet());
                            const userAYTNet = hasAYTScores ? parseFloat(calculateTotalAYTNet()) : 0;
                            
                            // Karşılaştırma türünü belirle
                            const comparisonType = hasAYTScores ? "TYT+AYT" : "TYT";
                            
                            // Tüm kullanıcıların netlerini topla
                            const allScores = [];
                            const allUserData = [];
                            
                            querySnapshot.forEach((doc) => {
                              const data = doc.data();
                              
                              // Veri doğrulama
                              if (!data.totalTYTNet) {
                                return; // Geçersiz veriyi atla
                              }
                              
                              let totalNet;
                              
                              if (comparisonType === "TYT") {
                                // Sadece TYT karşılaştırması yapılıyorsa
                                totalNet = parseFloat(data.totalTYTNet || 0);
                              } else {
                                // TYT+AYT karşılaştırması yapılıyorsa
                                totalNet = parseFloat(data.totalTYTNet || 0) + 
                                         (data.totalAYTNet ? parseFloat(data.totalAYTNet) : 0);
                              }
                              
                              // Geçerli bir sayı mı kontrol et
                              if (!isNaN(totalNet)) {
                                allScores.push(totalNet);
                                allUserData.push({
                                  id: doc.id,
                                  totalNet: totalNet,
                                  tytNet: parseFloat(data.totalTYTNet || 0),
                                  aytNet: data.totalAYTNet ? parseFloat(data.totalAYTNet) : 0,
                                  timestamp: data.timestamp ? data.timestamp.toDate() : new Date()
                                });
                              }
                            });
                            
                            // Veri yoksa uyarı göster
                            if (allScores.length === 0) {
                              setError(`${formData.province} ilinde geçerli net bilgisi bulunamadı.`);
                              setLoading(false);
                              return;
                            }
                            
                            // Kullanıcının toplam neti
                            const userTotalNet = comparisonType === "TYT" ? userTYTNet : (userTYTNet + userAYTNet);
                            
                            // Kullanıcının sıralamasını bul
                            allScores.push(userTotalNet);
                            const sortedScores = [...allScores].sort((a, b) => b - a); // Büyükten küçüğe sırala
                            const userRank = sortedScores.indexOf(userTotalNet) + 1;
                            
                            // Sonucu göster
                            setComparisonResult({
                              province: formData.province,
                              totalUsers: allScores.length - 1,
                              rank: userRank,
                              userNet: userTotalNet.toFixed(2),
                              highestNet: sortedScores[0].toFixed(2),
                              comparisonType: comparisonType,
                              tytNet: userTYTNet.toFixed(2),
                              aytNet: hasAYTScores ? userAYTNet.toFixed(2) : "0.00"
                            });
                          } catch (firestoreError) {
                            console.error("Firestore error: ", firestoreError);
                            setError(`Veritabanı sorgusu sırasında bir hata oluştu. Lütfen daha sonra tekrar deneyiniz.`);
                            setLoading(false);
                            return;
                          }
                        } catch (error) {
                          console.error("Error comparing scores: ", error);
                          setError("Karşılaştırma yapılırken bir hata oluştu.");
                        } finally {
                          setLoading(false);
                        }
                      }}
                      sx={{
                        bgcolor: '#3F51B5',
                        '&:hover': {
                          bgcolor: '#303F9F'
                        }
                      }}
                    >
                      {loading ? <CircularProgress size={24} color="inherit" /> : 'RekaNET Hesapla'}
                    </Button>
                  </Box>
                </Box>
              </Box>
            </Fade>
          )}
        </CardContent>
      </Card>
      </Box>
    </Box>
  );
};

export default RekaNET;
